{"answers": [{"answer_start": 151, "text": "provide a fault-tolerant, efficient routing method for telecommunication messages"}, {"answer_start": 151, "text": "provide a fault-tolerant, efficient routing method for telecommunication messages"}, {"answer_start": 161, "text": "fault-tolerant, efficient routing method"}], "question": "What did Distributed Adaptive Message Block Switching do", "id": "5725d34089a1e219009abf51", "prediction_results": {"best_span_str": "to provide a fault-tolerant", "span_start_probs": [6.515489076264203e-05, 3.073865286751243e-07, 2.6109907480531547e-07, 3.3986188441303966e-07, 1.6452628415208892e-06, 3.0837675240036333e-06, 0.00023374879674520344, 1.6288444385281764e-05, 1.6777197743067518e-05, 6.398831374099245e-06, 7.439127216457564e-07, 1.404865543008782e-05, 4.3122698116349056e-05, 0.0001448650291422382, 0.0002858347143046558, 4.693615483120084e-05, 2.9212415029178374e-05, 2.156362279492896e-05, 0.0002482322452124208, 0.023474112153053284, 0.1117759495973587, 0.06298504769802094, 0.2627965807914734, 0.26022496819496155, 0.0437062568962574, 0.040218133479356766, 3.838636621367186e-05, 0.0015735257184132934, 0.0002925913140643388, 0.12069951742887497, 0.012653383426368237, 0.00251778750680387, 0.0012165156658738852, 0.02464200370013714, 0.0010502623626962304, 0.0004774725530296564, 0.0009360617841593921, 1.3850623872713186e-05, 0.0009222801309078932, 0.000740057323127985, 0.00016834400594234467, 5.635782872559503e-05, 0.00012492148380260915, 0.0005068124155513942, 5.484876237460412e-05, 1.2576691005961038e-05, 0.00466180220246315, 2.7919055355596356e-05, 9.396993846166879e-05, 0.00016973562014754862, 9.439091627427842e-06, 5.274869181448594e-07, 5.820171281811781e-06, 1.1483380149002187e-05, 5.249266541795805e-05, 7.836159056751058e-05, 0.0005652148392982781, 1.184092070616316e-05, 0.00983984861522913, 0.0008703821222297847, 0.0018472106894478202, 0.0009803769644349813, 0.0011132765794172883, 2.313047389179701e-06, 0.001200697966851294, 1.7437466794945067e-06, 1.7591577488929033e-05, 1.276979219255736e-06, 0.0003190462593920529, 8.240325405495241e-05, 1.248424041477847e-06, 0.00020045324345119298, 0.00013081413635518402, 9.113987289310899e-06, 4.274812454241328e-05, 0.0001337669527856633, 2.395779802100151e-06, 0.0005872122128494084, 3.982559519499773e-06, 2.1554217255470576e-06, 4.871921646554256e-06, 9.601950523574487e-07, 2.5071092295547714e-06, 5.18880806339439e-05, 1.2628538570425007e-05, 9.047374078363646e-06, 4.441652345121838e-05, 0.00036360655212774873, 5.7054796343436465e-05, 1.4473190503849764e-06, 3.433808160480112e-05, 8.443348633591086e-06, 1.4222738400349044e-06, 1.1392576197977178e-06, 1.5205516774585703e-06, 7.540179467468988e-07, 1.1113871600798575e-08, 2.2324084625324758e-07, 2.4512166518775302e-08, 8.642310866946445e-09, 2.017954869870664e-08, 2.3550437333597074e-07, 6.706972044412396e-08, 4.035642220401314e-08, 8.661898753814512e-09, 1.2360646906017791e-07, 1.5397949582052206e-08, 1.6559770221746817e-09, 9.976938386557777e-09, 8.936215323274155e-08, 7.475930985378909e-09, 4.238983919435668e-08, 1.287875051048104e-08, 2.628954298700137e-08, 1.5722001478479797e-07, 3.5878019843949005e-07, 3.027597995242104e-05, 5.646956537930237e-07, 2.3025975224300055e-06, 7.102395102265291e-06, 6.202400982147083e-05, 4.221739072818309e-05, 3.406319228815846e-05, 7.905881830083672e-06, 6.981625483604148e-05, 7.332708264584653e-06, 1.0020162335422356e-06, 0.0007811621762812138, 7.035389717202634e-05, 2.6664038159651682e-05, 2.4198274331865832e-05, 3.2727086363593116e-05, 5.851535433976096e-07, 4.159320212693274e-07, 2.007724333452643e-07, 4.1300941688859893e-07, 7.614116839249618e-07, 7.680101816731622e-07, 3.1024680424707185e-07, 7.471837307093665e-06, 1.4923629350960255e-05, 2.5414145056856796e-05, 3.061022937345115e-07, 1.8458464410286979e-06, 2.766492116279551e-06, 3.3467324556113454e-07, 3.9613487956557947e-07, 5.613698021988967e-07, 2.1841301531821955e-06, 1.7119081974215078e-07, 1.3093723794099787e-07, 2.0536356259981403e-07, 1.6469604702251672e-07, 6.577906788152177e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [0.0002618998696561903, 7.22291531474184e-07, 5.176794388717099e-07, 4.1994667299150024e-07, 1.6756546756369062e-05, 2.2858607735543046e-06, 1.4269372741182451e-06, 7.512456363656383e-07, 9.574838259140961e-06, 3.4199882747998345e-07, 3.405594725336414e-06, 1.8041084786091233e-06, 3.436197459905088e-07, 1.2831392268708441e-05, 1.1372163726264262e-06, 6.72572753046552e-07, 1.7969977079701493e-06, 1.5504286920986488e-06, 4.8586385673843324e-05, 2.175584995711688e-06, 6.902004770381609e-06, 0.002013150602579117, 1.4343504517455585e-05, 3.427913907216862e-05, 3.0801202228758484e-05, 0.0003227299894206226, 3.572344212443568e-05, 0.6098760962486267, 0.004009158816188574, 0.0009868164779618382, 0.0017211007652804255, 0.10101693123579025, 5.205682464293204e-05, 0.00034537233295850456, 0.14797982573509216, 3.360195114510134e-05, 0.00010753864626167342, 6.161003966553835e-06, 1.8257376723340712e-05, 0.0001265065948246047, 0.08777529746294022, 4.124554470763542e-05, 2.3906080969027244e-05, 0.00047349464148283005, 0.013123605400323868, 0.0003383058065082878, 0.00034697618684731424, 2.9075529255351285e-06, 4.138314579904545e-06, 3.3142273423436563e-06, 3.1222746201819973e-06, 7.020948373792635e-07, 0.022090908139944077, 0.002467277692630887, 6.870511128909129e-07, 1.5434043234563433e-05, 1.3790764569421299e-05, 4.495202858834091e-07, 4.652404459193349e-05, 1.926191771417507e-06, 7.241172716021538e-05, 5.972901817585807e-06, 0.00021176273003220558, 7.602649816362828e-07, 4.3896625356865115e-06, 6.159666554594878e-07, 0.0001161152176791802, 1.0711070217439556e-06, 3.925627243006602e-05, 0.002455489244312048, 3.158679828629829e-05, 3.592919313177845e-07, 3.597836257540621e-05, 3.2451026754642953e-07, 3.2406398986495333e-07, 1.0198345989920199e-06, 1.1580042524883538e-07, 0.0001845375809352845, 4.3189064058424265e-07, 3.055307900012849e-07, 2.4902133191062603e-06, 0.0004145907296333462, 0.00011649333464447409, 4.140456155710126e-07, 1.977358436988652e-07, 2.376785460000974e-06, 1.6388139556511305e-07, 2.5476762743892323e-07, 3.9881502743810415e-05, 2.958853144718887e-07, 1.4547619002769352e-06, 4.917672777082771e-05, 3.04925322325289e-07, 7.261375145617421e-08, 4.00725070903718e-07, 8.367438226741797e-07, 3.863919673108285e-08, 1.301696102018468e-07, 4.39318091594032e-06, 3.040632989836922e-08, 2.8841613541885636e-08, 1.36856883159453e-07, 1.1810464428663181e-07, 3.801527782343328e-06, 2.8010022745661445e-08, 6.877652936054801e-08, 4.7609523790015373e-07, 1.4983108940214152e-06, 2.7146795034127535e-08, 1.8550475999745686e-07, 1.8975581042468548e-05, 6.097308613561836e-08, 5.469847508265957e-08, 6.19363405007789e-08, 1.9390556190046482e-05, 7.682358955207746e-06, 1.0899902918026783e-06, 3.2282287065754645e-08, 5.111469363328069e-07, 8.884714475243527e-08, 1.3982371456222609e-06, 2.396248248714983e-07, 3.097619128311635e-06, 7.402584287774516e-07, 2.2715507839166094e-06, 3.5405915696173906e-05, 1.266638207653159e-07, 2.5155397452181205e-05, 7.126203058760439e-07, 2.9416776214929996e-06, 6.600268079637317e-06, 6.613932782784104e-05, 1.196149526094814e-07, 1.1714378160831984e-05, 9.1642370136924e-08, 7.628239018231397e-08, 3.7065130982227856e-06, 6.296573246800108e-06, 2.8185754672449548e-06, 1.5549470333553472e-07, 1.1695779988940558e-07, 3.998487954959273e-06, 1.0071215683638002e-07, 1.563389844250196e-07, 1.1880993042723276e-05, 1.309524151338337e-07, 1.2040109709232638e-07, 1.4350428045872832e-07, 4.341760359238833e-05, 8.183773303471753e-08, 7.256038259129127e-08, 1.273973566640052e-07, 8.254844942712225e-06, 3.0019853511475958e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["Starting", "in", "the", "late", "1950s", ",", "American", "computer", "scientist", "Paul", "Baran", "developed", "the", "concept", "Distributed", "Adaptive", "Message", "Block", "Switching", "with", "the", "goal", "to", "provide", "a", "fault", "-", "tolerant", ",", "efficient", "routing", "method", "for", "telecommunication", "messages", "as", "part", "of", "a", "research", "program", "at", "the", "RAND", "Corporation", ",", "funded", "by", "the", "US", "Department", "of", "Defense", ".", "This", "concept", "contrasted", "and", "contradicted", "the", "theretofore", "established", "principles", "of", "pre", "-", "allocation", "of", "network", "bandwidth", ",", "largely", "fortified", "by", "the", "development", "of", "telecommunications", "in", "the", "Bell", "System", ".", "The", "new", "concept", "found", "little", "resonance", "among", "network", "implementers", "until", "the", "independent", "work", "of", "Donald", "Davies", "at", "the", "National", "Physical", "Laboratory", "(", "United", "Kingdom", ")", "(", "NPL", ")", "in", "the", "late", "1960s", ".", "Davies", "is", "credited", "with", "coining", "the", "modern", "name", "packet", "switching", "and", "inspiring", "numerous", "packet", "switching", "networks", "in", "Europe", "in", "the", "decade", "following", ",", "including", "the", "incorporation", "of", "the", "concept", "in", "the", "early", "ARPANET", "in", "the", "United", "States", "."], "best_span": [22, 27], "best_span_char": [148, 175]}, "_id": "5725d34089a1e219009abf51", "context": "Starting in the late 1950s, American computer scientist Paul Baran developed the concept Distributed Adaptive Message Block Switching with the goal to provide a fault-tolerant, efficient routing method for telecommunication messages as part of a research program at the RAND Corporation, funded by the US Department of Defense. This concept contrasted and contradicted the theretofore established principles of pre-allocation of network bandwidth, largely fortified by the development of telecommunications in the Bell System. The new concept found little resonance among network implementers until the independent work of Donald Davies at the National Physical Laboratory (United Kingdom) (NPL) in the late 1960s. Davies is credited with coining the modern name packet switching and inspiring numerous packet switching networks in Europe in the decade following, including the incorporation of the concept in the early ARPANET in the United States.", "title": "Packet_switching", "machine_answer": {"answer_start": 148, "text": "to provide a fault-tolerant"}}