{"answers": [{"answer_start": 448, "text": "the AKS primality test"}, {"answer_start": 452, "text": "AKS primality test"}, {"answer_start": 452, "text": "AKS primality test"}, {"answer_start": 452, "text": "AKS primality test"}, {"answer_start": 452, "text": "AKS primality test"}], "question": "What is the name of another algorithm useful for conveniently testing the primality of large numbers? ", "id": "57296f293f37b319004783a6", "prediction_results": {"best_span_str": "Miller\u2013Rabin primality test", "span_start_probs": [1.2663251254707575e-05, 9.371095984533895e-06, 2.4809912346768215e-08, 4.015144838831475e-07, 7.255185209942283e-06, 4.241623230427649e-07, 3.447236451847857e-08, 1.0563860541878967e-06, 1.5424436838884503e-08, 4.268451903044479e-08, 2.525725051327754e-08, 1.0059578926302493e-05, 3.421321821406309e-07, 3.8217485780478455e-06, 1.116766725317575e-06, 4.6175051693353453e-07, 3.1569743441650644e-05, 1.0690891940612346e-06, 1.5170459732871677e-07, 1.4119415027380455e-05, 7.032020221231505e-06, 8.693378731550183e-06, 1.7780739369754883e-07, 5.4557222028961405e-06, 9.737134860188235e-06, 1.2794571375707164e-05, 1.5329242160078138e-05, 2.388379925832851e-06, 2.1901763830101117e-05, 9.093694825423881e-05, 0.026724182069301605, 1.7905795175465755e-05, 3.1476865842705593e-06, 4.674185038311407e-05, 9.499408406554721e-06, 1.793513092707144e-06, 7.980396185303107e-05, 0.00010797609866131097, 8.299335604533553e-05, 6.020219416313921e-07, 9.584995495970361e-06, 7.195739271992352e-06, 4.514243201469981e-08, 7.503658252971945e-06, 3.402301899768645e-06, 4.7493779220530996e-07, 3.9877172639535274e-06, 1.8891755360073148e-07, 5.506336492544506e-06, 0.004282935988157988, 0.00025557755725458264, 0.000522035697940737, 0.000674128532409668, 1.7021815438056365e-05, 0.0018903031013906002, 4.590850494423648e-06, 6.592172780983674e-07, 2.11289702178874e-07, 9.796227686820203e-07, 5.802279474664829e-07, 1.533780505269533e-06, 1.0429011126689147e-05, 1.3626298823510297e-05, 4.82158206693839e-08, 6.174318968987791e-06, 1.365199409519846e-06, 1.6289975519612199e-06, 2.427230720059015e-05, 3.5201068385504186e-05, 0.16372250020503998, 0.7633816599845886, 8.93370815902017e-05, 0.009019305929541588, 0.0009270722512155771, 0.00012541247997432947, 1.161490672529908e-06, 2.9934890335425735e-06, 1.9522653929016087e-06, 9.479843356530182e-06, 7.486313506888109e-07, 1.585718200658448e-05, 0.00023810523271095008, 0.00013562182721216232, 6.502876931335777e-05, 7.280438580892223e-07, 0.0009389654733240604, 9.114193062487175e-07, 2.8257688882149523e-06, 0.007750061806291342, 0.017941206693649292, 0.00010252485662931576, 1.8762946638162248e-05, 2.846010431767354e-07, 7.010769991211419e-07, 3.707473524627858e-06, 2.207689931310597e-06, 1.651003117331129e-06, 1.5241348592098802e-06, 1.072113491318305e-06, 3.598820228489785e-07, 2.3694949504715623e-06, 1.1890227114008667e-07, 2.4080020466499263e-07, 1.4873297686790465e-06, 1.372644146613311e-05, 4.552292466541985e-06, 8.773911730486361e-08, 7.940762714042648e-08, 8.898568921722472e-06, 5.752559673055657e-07, 5.998754204483703e-06, 1.2880357644462492e-05, 1.0542444215388969e-06, 1.715481090514004e-07, 2.7440839858172694e-06, 4.7100189703996875e-07, 2.3126829546527006e-05, 1.0694700591784567e-07, 2.5671039111330174e-05, 4.0261809886033006e-07, 3.1084965712580015e-08, 2.2731245508111897e-07, 1.4943391306587728e-06, 0.00025654275668784976, 7.752454962428601e-07, 1.0269741324009374e-07, 4.860077069679392e-07, 6.736637914173116e-09, 6.120797024777858e-08, 9.800895384159958e-08, 3.534475467859011e-08, 2.9221347119801067e-08, 1.2746556876663817e-06, 3.884396448938787e-07, 3.6592339824892406e-08, 2.3041390306843823e-07, 5.816271198000322e-08, 1.6309328998431738e-08, 1.728837787595694e-06, 3.1662445962865604e-06, 1.5659276186852367e-07, 2.846328186478786e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [2.9222030661912868e-06, 9.212706572725438e-06, 3.2534794058847183e-07, 3.53251749629635e-07, 8.66658374434337e-05, 2.9919650046394963e-07, 1.406114336077735e-07, 4.596968665282475e-06, 1.4354893210111186e-05, 3.8498902199535223e-07, 2.6362758376308193e-07, 5.721770503441803e-05, 2.4038226911216043e-05, 1.4750433763310866e-07, 5.536587650567526e-07, 1.1059539417601627e-07, 3.714785634656437e-07, 1.5771577182022156e-06, 6.199456947797444e-08, 2.1632948232763738e-07, 9.50902929730546e-08, 1.6168888805623283e-06, 5.763756405485765e-08, 1.0774884628972359e-07, 1.8196644191448286e-07, 2.836850114817935e-07, 7.1207932705874555e-06, 1.0845907638667995e-07, 2.4428814526800124e-07, 1.7840027055626706e-07, 0.00012097346188966185, 0.0057913814671337605, 0.0001473251759307459, 2.8832655516453087e-06, 3.4576507346173457e-07, 7.357544262731608e-08, 9.259694024876808e-07, 3.402671779895172e-07, 2.2722435460309498e-05, 8.766412662453149e-08, 1.9208675894333282e-07, 6.233709086700401e-07, 5.0016343067227353e-08, 2.1403236871719855e-07, 5.867851768925902e-07, 6.909111505137844e-08, 1.077557317330502e-05, 2.459144525346346e-06, 1.4626688425778411e-05, 9.950733328878414e-06, 5.515832981473068e-07, 4.343893920122355e-07, 3.771371120819822e-05, 4.22280066914027e-07, 8.413599061896093e-06, 0.0021744435653090477, 1.2069607464582077e-06, 7.206747909549449e-07, 3.062724863411859e-05, 6.226532036635035e-07, 1.7713869056024123e-06, 3.680319764498563e-07, 1.094376239052508e-05, 1.2931096193824487e-07, 6.07987601597415e-07, 0.00012085282651241869, 1.958630127774086e-05, 7.399692094622878e-07, 2.2408632105452853e-07, 3.522904307828867e-06, 0.00020980185945518315, 3.4137330658268183e-05, 0.0041133644990623, 0.0035472975578159094, 0.919413149356842, 0.0052372245118021965, 6.045587269909447e-06, 3.0440446607826743e-07, 0.0002108486951328814, 9.288407454732805e-06, 4.4880417249260063e-07, 6.526382207994175e-07, 1.5109110336197773e-06, 2.718877567531308e-06, 1.956354367393942e-07, 0.0003170007548760623, 2.6159948902204633e-05, 6.222910542419413e-07, 4.560324669000693e-06, 5.9237692767055705e-05, 0.00010807513899635524, 0.056753043085336685, 0.0007876852760091424, 1.4988872862886637e-06, 1.4888568330206908e-05, 5.565746619140555e-07, 2.6428207888784527e-07, 9.962512876882101e-07, 4.471821284823818e-06, 7.308507576908596e-08, 3.590107837680989e-07, 8.651059761177748e-05, 6.658071470155846e-06, 1.8068077167754382e-07, 4.632949526239827e-07, 7.50812887417851e-06, 1.4361739886226133e-07, 1.453376086146818e-07, 0.0001199130347231403, 3.239528086851351e-05, 1.738632562364728e-07, 1.3993785330512765e-07, 5.119234629091807e-06, 3.151220084873785e-08, 5.439337087409513e-07, 4.732273950480703e-08, 1.10463577129849e-06, 3.6048518836651056e-08, 3.4801098536263453e-07, 1.8554408597992733e-05, 7.170707476689131e-07, 1.2357909895399644e-07, 7.93526240272513e-08, 3.838179054582724e-06, 7.25987774785608e-05, 7.790141353325453e-06, 6.418870412971955e-08, 1.3571387569299986e-08, 1.2087259904092207e-07, 6.681106583528162e-07, 7.509929105253832e-07, 5.1037574166912236e-08, 4.557941934990595e-08, 1.3696684675323922e-07, 7.063842843990642e-08, 1.0888845025647242e-07, 1.9533453610165452e-07, 4.5950045546305773e-08, 1.1478575743240071e-06, 1.392754995777068e-07, 3.02840135191218e-06, 7.566575277451193e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["The", "property", "of", "being", "prime", "(", "or", "not", ")", "is", "called", "primality", ".", "A", "simple", "but", "slow", "method", "of", "verifying", "the", "primality", "of", "a", "given", "number", "n", "is", "known", "as", "trial", "division", ".", "It", "consists", "of", "testing", "whether", "n", "is", "a", "multiple", "of", "any", "integer", "between", "2", "and", ".", "Algorithms", "much", "more", "efficient", "than", "trial", "division", "have", "been", "devised", "to", "test", "the", "primality", "of", "large", "numbers", ".", "These", "include", "the", "Miller", "\u2013", "Rabin", "primality", "test", ",", "which", "is", "fast", "but", "has", "a", "small", "probability", "of", "error", ",", "and", "the", "AKS", "primality", "test", ",", "which", "always", "produces", "the", "correct", "answer", "in", "polynomial", "time", "but", "is", "too", "slow", "to", "be", "practical", ".", "Particularly", "fast", "methods", "are", "available", "for", "numbers", "of", "special", "forms", ",", "such", "as", "Mersenne", "numbers", ".", "As", "of", "January", "2016[update", "]", ",", "the", "largest", "known", "prime", "number", "has", "22,338,618", "decimal", "digits", "."], "best_span": [70, 74], "best_span_char": [363, 177]}, "_id": "57296f293f37b319004783a6", "context": "The property of being prime (or not) is called primality. A simple but slow method of verifying the primality of a given number n is known as trial division. It consists of testing whether n is a multiple of any integer between 2 and . Algorithms much more efficient than trial division have been devised to test the primality of large numbers. These include the Miller\u2013Rabin primality test, which is fast but has a small probability of error, and the AKS primality test, which always produces the correct answer in polynomial time but is too slow to be practical. Particularly fast methods are available for numbers of special forms, such as Mersenne numbers. As of January 2016[update], the largest known prime number has 22,338,618 decimal digits.", "title": "Prime_number", "machine_answer": {"answer_start": 363, "text": "Miller\u2013Rabin primality test"}}