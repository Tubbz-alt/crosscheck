{"answers": [{"answer_start": 275, "text": "deterministic"}, {"answer_start": 275, "text": "deterministic algorithm"}, {"answer_start": 275, "text": "deterministic"}, {"answer_start": 275, "text": "deterministic"}, {"answer_start": 275, "text": "deterministic"}], "question": "What type of algorithm is trial division?", "id": "57297d421d046914007794e8", "prediction_results": {"best_span_str": "deterministic", "span_start_probs": [2.588700044725556e-05, 1.818927012209315e-05, 5.569893346546451e-07, 1.8130852375008999e-09, 5.621011212042504e-08, 4.7617636056429546e-08, 1.5103864825505298e-08, 1.5545336129463294e-09, 7.560284065455392e-10, 3.0218004098969686e-08, 1.714772857042135e-08, 3.762608571378223e-07, 4.819941068490152e-07, 2.938886609626934e-07, 1.5970185174296603e-08, 6.409404886653647e-05, 6.464720314625083e-09, 8.029358844474643e-10, 5.158523563864037e-08, 2.983157969538297e-07, 4.4148446676217645e-08, 2.997861514586475e-08, 3.462232101014706e-08, 2.4377007434850384e-07, 0.0004394962452352047, 5.575154773396207e-07, 3.3297820323241467e-07, 0.0028476151637732983, 5.9351742720537e-07, 1.3846405977346876e-07, 2.563723739967827e-07, 9.762680264202572e-08, 1.3430042855588908e-08, 7.664539936058645e-08, 5.116346901701263e-09, 1.0710922992984706e-07, 3.688747796104508e-08, 4.744293846670189e-08, 2.8783556871303517e-08, 1.0529184635288402e-08, 2.303726542862705e-09, 5.065922792368838e-08, 8.53564108282967e-10, 3.4995727560271916e-07, 3.4680763860706065e-07, 3.536937219905667e-05, 7.15953137842007e-06, 1.6290830899379216e-05, 0.0008202597964555025, 9.05914421309717e-05, 0.00011422523675719276, 0.046113885939121246, 0.9481931924819946, 2.192729152739048e-05, 2.3921056708786637e-06, 3.199137097453786e-07, 4.272922069503693e-06, 2.1359628590289503e-06, 3.3512569075355714e-07, 3.069052922910487e-08, 6.450467481045052e-06, 1.6668227544869296e-06, 1.084297537090606e-06, 1.6434681811006158e-06, 2.314600124009303e-06, 1.5152442074395367e-06, 7.177244043532482e-08, 1.114208103558667e-07, 8.10968288078584e-07, 6.759750981188972e-09, 1.0540232324274257e-05, 2.028697417699732e-05, 1.1436130620268159e-07, 2.9634566089953296e-07, 4.043791341246106e-05, 9.329577892458474e-07, 0.0010875625303015113, 2.2767008545088174e-07, 3.1109252951466715e-09, 6.958759257713609e-08, 2.8421206721418457e-08, 4.232183492547392e-10, 8.033100407089933e-09, 2.0520940324786352e-07, 1.885548606139764e-08, 5.157448690340516e-09, 1.4310467255640447e-09, 1.0839582703647821e-10, 2.9300903925388866e-09, 1.3045868829664187e-09, 6.758364701209274e-11, 3.0595188604820578e-09, 2.630851647644761e-10, 1.55774593224578e-08, 1.0967847963172517e-08, 2.2120605347453193e-09, 1.9314948251913933e-10, 4.4184731429197655e-09, 9.98839233545823e-10, 4.70640859617788e-10, 1.251272280233806e-10, 4.577755535750683e-11, 5.900704369565801e-10, 2.4742641269170917e-09, 1.5804120234719221e-09, 1.5789289320444766e-10, 2.3258892034583312e-10, 4.363324812572955e-09, 7.625570175306962e-10, 2.622310146804807e-10, 6.737508329024422e-09, 8.535706030876611e-10, 7.278813107802762e-10, 9.195399303107976e-11, 2.6688382059880666e-10, 1.7507142957562394e-10, 6.182573203394881e-11, 6.38030114852306e-11, 4.1651632143313577e-10, 3.1207653128362267e-10, 1.919949789430664e-11, 1.8073459395751001e-10, 1.7691056952706674e-10, 3.029788919750587e-11, 1.2823134915018741e-11, 1.297806528910428e-09, 3.874580656315629e-08, 2.320825531754167e-09, 4.6164716493990454e-09, 7.797930834385625e-08, 1.1569336599848157e-09, 1.1682976808202739e-10, 1.1620526763067573e-10, 1.8094421794234705e-11, 3.159901507121532e-10, 4.0995429273493755e-09, 6.094783011612037e-11, 1.1218941053936504e-10, 1.4730505704108054e-08, 2.0244490528398273e-09, 7.87100828958387e-10, 6.819629305709896e-10, 1.6765803190210704e-09, 9.03984997968621e-10, 7.083435227261958e-11, 4.729909172662694e-12, 1.1984720993396536e-09, 8.277695195957335e-11, 9.746831813872703e-11, 3.013990446110171e-11, 6.988732925705676e-10, 2.127983345090456e-09, 4.326397462506293e-09, 1.7191888190826177e-10, 3.775940893291363e-09, 1.0963765451066365e-09, 1.5184815904678572e-10, 7.835603277328573e-09, 5.324924876037862e-11, 5.548363102292342e-09, 8.312878163607706e-12, 2.5043633833377044e-11, 1.4570597506313732e-10, 3.363689535240688e-11, 6.064734218297341e-12, 2.733559906209493e-11, 6.276665298621253e-11, 3.4847168553509e-12, 2.4844445944971483e-10, 5.5372859075752956e-12, 1.8178143712521688e-10, 2.1692865559419516e-10, 3.992987190892805e-11, 1.196750858134532e-11, 4.099671643831293e-11, 1.5302568934227878e-10, 1.6170002836712882e-11, 1.5671734743261112e-10, 5.5933566805999035e-11, 1.4605707268633417e-11, 1.6686253073716628e-11, 2.2130677845844104e-10, 1.7815600383830343e-10, 2.6369543701387776e-11, 6.161062545556595e-12, 2.37617370224541e-10, 1.4971854311873756e-10, 1.997057380576095e-10, 1.2175344933640364e-11, 4.872793279986354e-10, 4.378944082339409e-11, 5.936942604201079e-10, 2.396517879976745e-11, 1.0499227355575957e-11, 7.648814914773538e-11, 8.2548648472347e-11, 4.1322474331195735e-09, 8.286702990467631e-10, 1.0024483465542744e-09, 1.2535988913597862e-10, 1.0089467455953738e-10, 2.690353842482729e-11, 1.8479037189322867e-09, 2.4973827450480712e-09, 8.093152259469605e-10, 2.324514331020211e-10, 3.6349805387914103e-09, 7.273514679440041e-09, 3.282251415104298e-10, 3.1212209705699934e-08, 1.078866218584551e-09], "span_end_probs": [7.07913568476215e-05, 0.000393716327380389, 6.675490294583142e-05, 1.8254750955293275e-07, 5.341751716514409e-07, 1.239203584191273e-06, 4.570435066852951e-06, 9.765149400209339e-08, 1.0162547425807134e-07, 7.782869033690076e-07, 1.8163514425850735e-07, 2.0653026240324834e-06, 1.2317382243054453e-06, 1.3831336218572687e-05, 9.493947459304763e-07, 0.00044224856537766755, 2.7274285230305395e-07, 1.2060972665040026e-07, 8.656910495119519e-07, 1.1394487273719278e-06, 2.6010864530690014e-05, 8.894077836885117e-06, 1.3364025107875932e-05, 3.464625706328661e-07, 0.0007978654466569424, 0.000845913658849895, 4.879330663243309e-05, 0.0014666065108031034, 0.001080250833183527, 1.6806844769234885e-06, 5.884737106498505e-07, 1.07790640413441e-06, 8.530133754902636e-08, 4.400236548462999e-07, 6.863987067617927e-08, 2.928361766407761e-07, 2.0052421234595386e-07, 1.3297292866809585e-07, 1.6909150701849285e-07, 5.161011813470395e-07, 6.74384494914193e-08, 1.8880141396948602e-06, 3.369548196019423e-08, 3.044589220735361e-06, 3.014248477484216e-06, 1.246151782652305e-06, 1.6060039342846721e-06, 7.475987331417855e-07, 9.70051041804254e-06, 2.1992111214785837e-05, 3.080376416164654e-07, 7.102258678060025e-06, 0.6985534429550171, 0.29152870178222656, 0.0022373038809746504, 1.4885418750054669e-05, 4.537147106020711e-06, 2.4055141238932265e-06, 9.428298653801903e-05, 1.1461956091807224e-05, 9.837735888140742e-07, 9.419482012162916e-07, 6.537106855830643e-06, 1.6738320027798181e-06, 6.709406079608016e-07, 4.7038561206136364e-06, 7.681555871386081e-06, 3.873234959428373e-07, 3.3055497624445707e-05, 2.8048270905856043e-07, 2.62248448734681e-07, 3.8625785236945376e-05, 1.6246800441876985e-05, 4.079629718489741e-07, 0.00019820177112706006, 4.519146023085341e-05, 0.0011929033789783716, 0.0006266272393986583, 8.291432607165916e-08, 1.0747557155355025e-07, 7.902585821284447e-06, 3.5191686720281723e-07, 1.1885166628644583e-07, 4.8653923556685186e-08, 1.2211047817345388e-07, 1.2525231340987375e-07, 2.127900700088503e-07, 1.8306257842937157e-08, 4.1251276172715734e-08, 1.5775181338995026e-07, 2.0768650799141142e-08, 2.1307976112439064e-06, 4.679821472564072e-07, 3.7665888186211305e-08, 3.3288966960753896e-07, 5.8175945838456755e-08, 1.2909157298679474e-08, 3.164155941703939e-07, 3.0193781697107624e-08, 3.171428986092906e-08, 1.0562168739625122e-07, 1.4271211767891145e-08, 1.9837628428831522e-08, 3.491773981068036e-08, 3.87136992685555e-07, 4.226838257181953e-07, 2.3613965538515913e-07, 3.493292766165723e-08, 7.0350488101667e-08, 2.9210386998101967e-08, 2.6006334863382108e-08, 2.163143264510836e-08, 1.5538032016593206e-07, 2.8406551777493405e-08, 4.5440664564466715e-08, 2.582305391740647e-08, 1.726688303449464e-08, 1.1428163304572081e-07, 7.680866076498205e-08, 7.997752504707023e-08, 1.0582005494086388e-08, 1.5575336576034715e-08, 7.33258715968077e-08, 1.312191102442739e-07, 3.217589039650193e-08, 3.0037540454941336e-08, 4.842922152192841e-08, 7.464428364301057e-08, 2.0229970587593016e-08, 4.550257131086255e-07, 1.8045666365651414e-06, 1.9646540749818087e-07, 9.203372286492595e-08, 1.3474086735243418e-08, 1.8098438303582043e-08, 2.6257202989654616e-07, 3.9332579149231606e-07, 5.473258966048888e-07, 6.233445759562528e-08, 8.184969857438773e-08, 6.859052348318073e-08, 3.267267700834964e-08, 9.134102896268814e-08, 9.887176588563307e-08, 1.2909386271076073e-07, 1.096407498124563e-08, 3.4648518720814536e-08, 2.1576546771484573e-08, 2.870030186841177e-07, 5.244493905820491e-08, 3.239536283672351e-08, 3.0599963452004886e-08, 2.659221252088173e-07, 2.2434175406260692e-08, 7.183990646808525e-08, 1.1191870896709588e-07, 3.054148223213815e-08, 2.6313253442822315e-07, 2.4382044827575555e-08, 6.7511100496631116e-06, 4.6579078372133154e-08, 1.3780887542225173e-08, 4.142022902442477e-08, 7.80621363105638e-08, 1.4155454586273208e-08, 1.6430295346481216e-08, 3.5132451614572346e-08, 6.3844534103907336e-09, 6.516046937576903e-07, 3.6236269096434626e-08, 1.493882528791346e-08, 3.0235156600610935e-08, 1.1008582490035224e-08, 1.0171627984334464e-08, 1.276555217089026e-08, 2.8239679039643306e-08, 1.1549115441766844e-08, 2.77248677349462e-08, 7.476567986941518e-08, 9.342079110297163e-09, 1.226520751629323e-08, 3.394700343051227e-08, 3.963261718809008e-08, 1.1508363684242795e-07, 1.3023135636558436e-07, 1.198570132032728e-08, 1.6093247623416573e-08, 5.037148653741497e-08, 1.1550987721875572e-08, 4.01837297658858e-07, 1.9427430686391745e-07, 9.804897338483443e-09, 1.288861462001023e-08, 1.2820795980417188e-08, 7.219993847229489e-08, 2.8830013931724352e-08, 2.860664061188345e-08, 2.17756159770488e-08, 7.899684817402886e-08, 4.562434341437438e-08, 9.259346711587568e-08, 3.469282461310286e-08, 2.3824959782814403e-08, 2.4175465185294343e-08, 5.978922246185903e-08, 1.637682522925843e-08, 4.107924311824718e-08, 1.9523268690591067e-07, 3.083384569890768e-08, 3.5863268976754625e-07, 1.1853624073410174e-06], "passage_tokens": ["Modern", "primality", "tests", "for", "general", "numbers", "n", "can", "be", "divided", "into", "two", "main", "classes", ",", "probabilistic", "(", "or", "\"", "Monte", "Carlo", "\"", ")", "and", "deterministic", "algorithms", ".", "Deterministic", "algorithms", "provide", "a", "way", "to", "tell", "for", "sure", "whether", "a", "given", "number", "is", "prime", "or", "not", ".", "For", "example", ",", "trial", "division", "is", "a", "deterministic", "algorithm", "because", ",", "if", "performed", "correctly", ",", "it", "will", "always", "identify", "a", "prime", "number", "as", "prime", "and", "a", "composite", "number", "as", "composite", ".", "Probabilistic", "algorithms", "are", "normally", "faster", ",", "but", "do", "not", "completely", "prove", "that", "a", "number", "is", "prime", ".", "These", "tests", "rely", "on", "testing", "a", "given", "number", "in", "a", "partly", "random", "way", ".", "For", "example", ",", "a", "given", "test", "might", "pass", "all", "the", "time", "if", "applied", "to", "a", "prime", "number", ",", "but", "pass", "only", "with", "probability", "p", "if", "applied", "to", "a", "composite", "number", ".", "If", "we", "repeat", "the", "test", "n", "times", "and", "pass", "every", "time", ",", "then", "the", "probability", "that", "our", "number", "is", "composite", "is", "1/(1-p)n", ",", "which", "decreases", "exponentially", "with", "the", "number", "of", "tests", ",", "so", "we", "can", "be", "as", "sure", "as", "we", "like", "(", "though", "never", "perfectly", "sure", ")", "that", "the", "number", "is", "prime", ".", "On", "the", "other", "hand", ",", "if", "the", "test", "ever", "fails", ",", "then", "we", "know", "that", "the", "number", "is", "composite", "."], "best_span": [52, 52], "best_span_char": [120, 133]}, "_id": "57297d421d046914007794e8", "context": "Modern primality tests for general numbers n can be divided into two main classes, probabilistic (or \"Monte Carlo\") and deterministic algorithms. Deterministic algorithms provide a way to tell for sure whether a given number is prime or not. For example, trial division is a deterministic algorithm because, if performed correctly, it will always identify a prime number as prime and a composite number as composite. Probabilistic algorithms are normally faster, but do not completely prove that a number is prime. These tests rely on testing a given number in a partly random way. For example, a given test might pass all the time if applied to a prime number, but pass only with probability p if applied to a composite number. If we repeat the test n times and pass every time, then the probability that our number is composite is 1/(1-p)n, which decreases exponentially with the number of tests, so we can be as sure as we like (though never perfectly sure) that the number is prime. On the other hand, if the test ever fails, then we know that the number is composite.", "title": "Prime_number", "machine_answer": {"answer_start": 120, "text": "deterministic"}}