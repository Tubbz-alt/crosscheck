{"answers": [{"answer_start": 364, "text": "input"}, {"answer_start": 364, "text": "input"}, {"answer_start": 364, "text": "input"}], "question": "What would need to remain constant in a multiplication algorithm to produce the same outcome whether multiplying or squaring two integers?  ", "id": "56e1cbe2cd28a01900c67baf", "prediction_results": {"best_span_str": "reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer", "span_start_probs": [5.786230030935258e-05, 1.3669516192749143e-05, 1.574800262460485e-05, 0.00016275435336865485, 0.0002481460105627775, 6.59346233078395e-06, 7.710917270742357e-05, 0.00044565016287378967, 1.3832647027811618e-06, 5.3526640840573236e-05, 6.11714567639865e-05, 1.8546375940786675e-05, 0.0001773538679117337, 1.9358925783308223e-05, 7.704529707552865e-05, 0.0012913725804537535, 0.0018513184040784836, 0.0001071066435542889, 0.0001599121023900807, 0.000631936127319932, 1.1963882570853457e-05, 2.4292810849146917e-05, 0.0002552876539994031, 3.127247327938676e-05, 7.131411985028535e-05, 0.013689897023141384, 0.012468822300434113, 0.0001486804394517094, 0.013787138275802135, 0.004459964577108622, 0.005457934457808733, 0.016571907326579094, 0.005145106930285692, 0.3329426944255829, 0.00019596745551098138, 0.0033613499253988266, 0.007363397162407637, 0.000464567041490227, 0.06031782552599907, 0.019850848242640495, 0.00075439183274284, 0.0009591716225259006, 0.005632861517369747, 0.0005499296239577234, 0.005166251212358475, 0.001792481285519898, 0.0020954879000782967, 0.07727182656526566, 0.041682541370391846, 0.0008409847505390644, 0.019603166729211807, 0.002384024439379573, 0.007925680838525295, 0.00455363467335701, 0.0434294193983078, 0.006413452792912722, 0.005269574001431465, 0.0003971456899307668, 0.0019121430814266205, 5.653523840010166e-05, 0.0031455080024898052, 0.0006895643891766667, 0.000734578468836844, 0.02097497694194317, 0.009601953439414501, 0.10249464958906174, 0.013959992676973343, 0.03409705311059952, 0.00979125127196312, 0.00011409900616854429, 0.0026389360427856445, 0.0011196775594726205, 1.1468504453659989e-05, 0.00014466846187133342, 0.0004154462949372828, 5.3583997214445844e-05, 7.037353498162702e-05, 0.0004339153820183128, 0.000925845408346504, 0.00036183433257974684, 0.0008775774040259421, 0.013535050675272942, 0.001410781405866146, 0.01139836199581623, 0.0031705352012068033, 0.003530564485117793, 0.00011916262155864388, 0.0026984859723597765, 3.514067429932766e-05, 0.0037445963826030493, 0.0067529804073274136, 0.0014252708060666919, 0.00034624041290953755, 0.016108402982354164, 9.31894319364801e-05, 0.0018380581168457866, 0.000347667169990018, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [9.359230716654565e-06, 3.3290214105363702e-06, 2.6338768748246366e-06, 3.548002496245317e-06, 0.002160367090255022, 4.2233177737216465e-06, 5.301821602188284e-06, 0.000140023636049591, 2.6877833079197444e-06, 5.1473612984409556e-05, 0.0050752973183989525, 0.0004327419155742973, 5.056202098785434e-06, 3.7961553971399553e-06, 1.0369562915002462e-06, 1.2676551932599978e-06, 6.484171171905473e-05, 0.00022080405324231833, 4.060820629092632e-06, 7.907639519544318e-05, 0.0018651665886864066, 0.00037629122380167246, 1.5746290955576114e-05, 1.6815443814266473e-05, 4.3055269998149015e-06, 1.298080746892083e-06, 0.000147847764310427, 5.525844244402833e-06, 0.0002529515768401325, 1.1552191608643625e-05, 0.0010834711138159037, 1.1571875802474096e-05, 1.7887608919409104e-05, 0.3042764961719513, 0.00018229323904961348, 0.00019004479690920562, 0.016991179436445236, 0.00010204419231740758, 0.01120960246771574, 0.0002629266818985343, 0.03792230039834976, 0.0030136287678033113, 0.00013594821211881936, 7.494299097743351e-06, 1.7522762618682464e-06, 0.0002804132818710059, 1.0571680832072161e-05, 0.013270045630633831, 0.000461394403828308, 0.0019912375137209892, 2.1073155949125066e-05, 8.323942893184721e-05, 0.0021978775039315224, 4.871834607911296e-05, 0.0031618778593838215, 0.00011279567115707323, 0.38834062218666077, 0.009673257358372211, 0.0005138383130542934, 5.5714576774335e-06, 4.180668383924058e-06, 5.366653113014763e-07, 1.267632978851907e-05, 0.00146408099681139, 6.658062193309888e-05, 0.001741398824378848, 4.718760828836821e-05, 8.349646668648347e-05, 0.05176576226949692, 3.522633414831944e-05, 5.4152169468579814e-05, 0.03225155547261238, 3.546647712937556e-05, 5.993058948661201e-05, 0.00012465950567275286, 0.056953947991132736, 0.0033289343118667603, 4.217807600070955e-06, 2.384625531703932e-06, 3.1075139759195736e-06, 4.269805685908068e-06, 0.00014829244173597544, 1.4776176158193266e-06, 0.00025975596508942544, 5.89101982768625e-05, 0.003108390374109149, 1.6405218048021197e-05, 0.01450688298791647, 0.0005737509345635772, 2.966643478430342e-05, 0.0005674029816873372, 1.0280735978085431e-06, 1.6067880324044381e-06, 0.004970880225300789, 1.4581894902221393e-05, 0.008557203225791454, 0.01259043999016285, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["The", "most", "commonly", "used", "reduction", "is", "a", "polynomial", "-", "time", "reduction", ".", "This", "means", "that", "the", "reduction", "process", "takes", "polynomial", "time", ".", "For", "example", ",", "the", "problem", "of", "squaring", "an", "integer", "can", "be", "reduced", "to", "the", "problem", "of", "multiplying", "two", "integers", ".", "This", "means", "an", "algorithm", "for", "multiplying", "two", "integers", "can", "be", "used", "to", "square", "an", "integer", ".", "Indeed", ",", "this", "can", "be", "done", "by", "giving", "the", "same", "input", "to", "both", "inputs", "of", "the", "multiplication", "algorithm", ".", "Thus", "we", "see", "that", "squaring", "is", "not", "more", "difficult", "than", "multiplication", ",", "since", "squaring", "can", "be", "reduced", "to", "multiplication", "."], "best_span": [33, 56], "best_span_char": [181, 230]}, "_id": "56e1cbe2cd28a01900c67baf", "context": "The most commonly used reduction is a polynomial-time reduction. This means that the reduction process takes polynomial time. For example, the problem of squaring an integer can be reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer. Indeed, this can be done by giving the same input to both inputs of the multiplication algorithm. Thus we see that squaring is not more difficult than multiplication, since squaring can be reduced to multiplication.", "title": "Computational_complexity_theory", "machine_answer": {"answer_start": 181, "text": "reduced to the problem of multiplying two integers. This means an algorithm for multiplying two integers can be used to square an integer"}}