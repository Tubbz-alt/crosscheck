{"answers": [{"answer_start": 57, "text": "the Fermat primality test,"}, {"answer_start": 61, "text": "Fermat primality test"}, {"answer_start": 61, "text": "Fermat primality test"}, {"answer_start": 61, "text": "Fermat primality test"}, {"answer_start": 57, "text": "the Fermat primality test"}], "question": "What is one straightforward case of a probabilistic test?", "id": "57297ed93f37b3190047845f", "prediction_results": {"best_span_str": "Fermat primality test", "span_start_probs": [6.879891589051113e-05, 1.1560464372450951e-05, 1.1131455721624661e-05, 8.028942829696462e-06, 2.404450469839503e-06, 0.00011830341827590019, 5.242108090897091e-05, 3.1805124308448285e-05, 0.0019707237370312214, 0.2767646014690399, 0.5354081392288208, 0.0012829180341213942, 3.945014032069594e-05, 3.649056452559307e-05, 0.0025329631753265858, 0.00971158966422081, 0.00018069178622681648, 0.000733202148694545, 0.0008031520410440862, 0.0007287951302714646, 0.023971643298864365, 2.853791920642834e-05, 0.0015997333684936166, 0.00015893555246293545, 2.418490566924447e-06, 0.007324389182031155, 0.11730903387069702, 0.00024372128245886415, 0.0017552904319018126, 5.0192091293865815e-05, 1.1420759619795717e-05, 0.0003248977300245315, 0.001583547331392765, 0.0001442492357455194, 0.0002730845590122044, 0.0004562506510410458, 6.8786875999649055e-06, 0.0001928911660797894, 9.483942994847894e-05, 1.2279883776500355e-05, 4.128866203245707e-05, 0.008682351559400558, 0.00033199763856828213, 7.421118880301947e-06, 9.626681276131421e-05, 4.207322854199447e-05, 3.632917287177406e-05, 1.343317035207292e-05, 0.00022978903143666685, 2.265346483909525e-05, 5.818846148031298e-06, 1.488829184381757e-05, 8.633107427158393e-06, 8.891616016626358e-05, 2.4047856186371064e-06, 0.0010596946813166142, 0.0007834549760445952, 6.080493767512962e-05, 2.8453292543417774e-05, 0.00023143761791288853, 8.83803022588836e-06, 0.0001576611102791503, 1.6429487459390657e-06, 5.963386229268508e-07, 3.9026799640851095e-05, 0.00017457820649724454, 5.05161406181287e-05, 1.3087223123875447e-05, 3.241170531964599e-07, 3.8642559957224876e-05, 1.6925007457757602e-06, 1.1000994163623545e-05, 7.384721243397507e-07, 5.78258368477691e-06, 0.0007929021958261728, 6.35258256806992e-05, 3.7448421608132776e-06, 1.6398782463511452e-05, 3.2687773909856332e-06, 1.084795076167211e-05, 2.4837410819600336e-05, 0.00012157387391198426, 2.104315399265033e-06, 2.1075980839668773e-05, 8.034162601688877e-05, 3.870468844979769e-06, 1.3979901041238918e-06, 2.1106172425788827e-05, 3.935859785997309e-05, 2.4121445676428266e-06, 2.9680509783247544e-07, 6.361179111991078e-05, 4.3237105273874477e-05, 3.0943763249524636e-06, 7.843483217584435e-06, 4.18230740706349e-07, 2.5597148578526685e-06, 1.3178330391383497e-06, 6.938286333024735e-06, 2.7907958610740025e-07, 3.0761780180910137e-06, 7.20499144790665e-07, 7.045280767670192e-07, 4.2263320210622624e-05, 1.8352528059040196e-05, 2.356204277020879e-06, 6.633246698584117e-07, 7.4429849519219715e-06, 5.127857889419829e-07, 5.218895182679262e-08, 4.282605004846118e-06, 7.907892154435103e-07, 2.2195984001882607e-06, 3.5821409483105526e-07, 1.8511970623080742e-08, 2.420457713014912e-05, 7.985899515006167e-07, 7.058111464175454e-07, 9.563360072206706e-05, 4.2044284782605246e-06, 1.0721240073507943e-07, 4.770552095578751e-06, 1.143644794865395e-06, 7.320662831489244e-08, 4.628118404070847e-06, 2.1634751590227097e-07, 3.2081622691748635e-08, 3.4914671687147347e-07, 1.6467768659822468e-07, 2.1805756205139915e-06, 1.2529375226222328e-06, 3.584317482818733e-07, 8.503531603309966e-07, 5.3598558480416614e-08, 2.1849062648016115e-07, 1.4733236852748632e-08, 7.634026815139805e-07, 5.8339701070053707e-08, 3.4095856449312123e-07, 1.719941610645037e-05, 3.531143420332228e-06, 2.1123460101080127e-06, 2.836966217500958e-08, 1.321019112765498e-06, 1.322748175880406e-05, 1.1569921980481013e-06, 8.970738463176531e-08, 2.082111016932231e-08, 1.2443452135357802e-07, 7.642545085673191e-08, 4.102153354779148e-07, 9.94916717900196e-07, 1.648366887430086e-09, 5.689833670885491e-08, 4.3392915927142894e-09, 8.659118293508072e-07, 3.2174749531321822e-09, 2.8234475735189335e-07, 9.756425001228308e-09, 3.004090132208148e-08, 5.31876912646112e-06, 1.812347072416287e-08, 7.60703471769375e-07, 1.948547776464693e-07, 3.060702624679834e-07, 3.62451646651607e-06, 2.399934055574704e-05, 1.0877894283112255e-06, 6.470735570474062e-06, 1.5390220653443976e-07, 1.701371417084374e-07, 3.911518433596939e-07, 9.346809548560486e-08, 7.299730668819393e-07, 9.003912282423698e-07, 1.354797518615669e-06, 3.8057089568610536e-06, 1.7770990723420255e-07, 2.5485148853476858e-06, 6.579025011888007e-06, 1.5269988296040538e-07, 6.624554202971922e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [1.6088552001747303e-06, 2.876228109016665e-07, 1.5961768440320157e-06, 3.651074393928866e-07, 9.444428883398359e-08, 2.561449150562112e-07, 8.887408284863341e-07, 7.03548539604526e-06, 7.801990022926475e-07, 0.00012236677866894752, 0.004107647575438023, 0.013684285804629326, 0.7194423675537109, 0.004013086669147015, 1.5303909094654955e-05, 7.586373612866737e-06, 5.017489570491307e-07, 5.785447569905955e-07, 0.0003895769768860191, 1.8320093886359246e-06, 5.518220405065222e-06, 1.3803902220388409e-05, 3.225685077268281e-06, 0.0063432916067540646, 0.005276824347674847, 7.647796883247793e-05, 0.07294571399688721, 3.6368161090649664e-05, 2.5208599254256114e-05, 0.00087502202950418, 0.04977314919233322, 7.770187949063256e-05, 4.814341809833422e-05, 0.0001146691502071917, 4.099712168681435e-05, 0.010360656306147575, 1.7092832422349602e-05, 1.1725736840162426e-05, 7.427584932884201e-05, 0.07871721684932709, 0.028093960136175156, 6.387585017364472e-05, 4.848001026402926e-06, 6.947391284484183e-07, 1.4371530596690718e-06, 4.388617981021525e-06, 0.0010041720233857632, 1.746013026604487e-06, 3.5220080008002697e-06, 1.104986404243391e-05, 9.395312758897489e-07, 6.031591328792274e-05, 2.457803475408582e-06, 0.0013571184827014804, 7.07141007296741e-05, 1.214439294017211e-06, 1.6433194787168759e-06, 4.6583329094573855e-05, 4.452859229786554e-06, 0.0015745289856567979, 1.0200927818004857e-06, 4.20106107412721e-06, 4.128908403799869e-05, 0.00014103362627793103, 3.6433630157262087e-07, 3.812200759512052e-07, 4.908676601189654e-06, 7.127741992007941e-05, 2.2551890310751332e-07, 2.1499799913726747e-05, 8.07869923846738e-07, 1.2075422546331538e-06, 0.00041796910227276385, 9.682169911684468e-05, 1.495926227335076e-07, 3.9794478652765974e-05, 1.182506466079758e-07, 6.632468796397006e-08, 2.5174927031912375e-06, 1.580097546138859e-07, 1.147106516441454e-07, 7.053103558973817e-07, 6.357153381486569e-08, 1.7520719097774418e-07, 7.499774028474349e-07, 1.9133938621962443e-05, 1.0755564971987042e-07, 2.001776380211595e-07, 2.551301122366567e-06, 6.817317171226023e-06, 4.84397105537937e-06, 1.2907305801945768e-07, 1.141761345024861e-06, 1.1597342108871089e-07, 1.4982771290306118e-06, 2.7851187041960657e-05, 4.000556600658456e-06, 9.746226226070576e-08, 9.881803464395489e-08, 3.5395437691931875e-08, 1.3095832684939523e-07, 3.0489725759252906e-05, 3.042624484805856e-06, 8.089156722235202e-08, 4.125363517459846e-08, 4.942259010931593e-07, 3.394836411985125e-08, 1.8500466580917418e-07, 1.2296226259422838e-07, 3.045271768087332e-08, 1.0767598723759875e-06, 8.24995964876507e-08, 1.479099012158258e-07, 4.086909939360339e-06, 4.15450074342516e-08, 1.1836341400339734e-06, 1.2325378520472441e-05, 7.768398063490167e-06, 5.236657671048306e-06, 1.1168814353368361e-06, 3.432777617717875e-08, 6.268393804020889e-07, 2.3693201001151465e-06, 3.029704487289564e-08, 7.217295916461808e-08, 5.087075805931818e-06, 7.62052366098942e-07, 1.8110517885361332e-07, 5.513233247711469e-08, 2.4667805575973034e-08, 1.286172413017539e-08, 4.0767088194115786e-07, 1.734448673573752e-08, 1.0843161923901334e-08, 9.541806633706074e-08, 1.6475548036964938e-08, 6.11284463047923e-08, 8.7646931206109e-06, 5.802231044071959e-06, 4.672688547202597e-08, 3.794668756995634e-08, 1.1052090940211201e-06, 1.8940681911772117e-08, 4.810434006685682e-08, 6.728636208208627e-07, 9.104104492507759e-07, 9.75869897956727e-06, 3.8184558093234955e-07, 4.4682284539021566e-08, 2.4098952167150856e-08, 2.381791652794618e-08, 7.394849177444485e-08, 1.2049423681048665e-08, 8.001067612894985e-07, 3.43774395616947e-08, 5.704103855919129e-08, 1.1488631379563685e-08, 6.777481758035719e-06, 1.8899859810517228e-07, 1.4479757837193574e-08, 2.203311169068911e-07, 2.2591292392348805e-08, 1.7503967342236137e-07, 6.257985660340637e-06, 2.0023834679250285e-07, 1.2165743967784692e-08, 9.73534270087839e-07, 3.4888582689518444e-08, 1.9453009372227825e-06, 4.178978585400728e-08, 6.518965278701216e-08, 4.272160225582411e-08, 1.7448543943032746e-08, 3.032467787988935e-08, 7.192179509729613e-07, 2.5942858883354347e-07, 1.7664621054791496e-07, 3.652179714208614e-08, 3.959929628649661e-08, 3.826916952220927e-07, 4.823204562853789e-06, 9.47947773966007e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["A", "particularly", "simple", "example", "of", "a", "probabilistic", "test", "is", "the", "Fermat", "primality", "test", ",", "which", "relies", "on", "the", "fact", "(", "Fermat", "'s", "little", "theorem", ")", "that", "np\u2261n", "(", "mod", "p", ")", "for", "any", "n", "if", "p", "is", "a", "prime", "number", ".", "If", "we", "have", "a", "number", "b", "that", "we", "want", "to", "test", "for", "primality", ",", "then", "we", "work", "out", "nb", "(", "mod", "b", ")", "for", "a", "random", "value", "of", "n", "as", "our", "test", ".", "A", "flaw", "with", "this", "test", "is", "that", "there", "are", "some", "composite", "numbers", "(", "the", "Carmichael", "numbers", ")", "that", "satisfy", "the", "Fermat", "identity", "even", "though", "they", "are", "not", "prime", ",", "so", "the", "test", "has", "no", "way", "of", "distinguishing", "between", "prime", "numbers", "and", "Carmichael", "numbers", ".", "Carmichael", "numbers", "are", "substantially", "rarer", "than", "prime", "numbers", ",", "though", ",", "so", "this", "test", "can", "be", "useful", "for", "practical", "purposes", ".", "More", "powerful", "extensions", "of", "the", "Fermat", "primality", "test", ",", "such", "as", "the", "Baillie", "-", "PSW", ",", "Miller", "-", "Rabin", ",", "and", "Solovay", "-", "Strassen", "tests", ",", "are", "guaranteed", "to", "fail", "at", "least", "some", "of", "the", "time", "when", "applied", "to", "a", "composite", "number", "."], "best_span": [10, 12], "best_span_char": [61, 53]}, "_id": "57297ed93f37b3190047845f", "context": "A particularly simple example of a probabilistic test is the Fermat primality test, which relies on the fact (Fermat's little theorem) that np\u2261n (mod p) for any n if p is a prime number. If we have a number b that we want to test for primality, then we work out nb (mod b) for a random value of n as our test. A flaw with this test is that there are some composite numbers (the Carmichael numbers) that satisfy the Fermat identity even though they are not prime, so the test has no way of distinguishing between prime numbers and Carmichael numbers. Carmichael numbers are substantially rarer than prime numbers, though, so this test can be useful for practical purposes. More powerful extensions of the Fermat primality test, such as the Baillie-PSW, Miller-Rabin, and Solovay-Strassen tests, are guaranteed to fail at least some of the time when applied to a composite number.", "title": "Prime_number", "machine_answer": {"answer_start": 61, "text": "Fermat primality test"}}