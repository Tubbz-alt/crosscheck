{"answers": [{"answer_start": 83, "text": "probabilistic (or \"Monte Carlo\")"}, {"answer_start": 83, "text": "probabilistic (or \"Monte Carlo\")"}, {"answer_start": 83, "text": "probabilistic"}, {"answer_start": 83, "text": "probabilistic"}, {"answer_start": 83, "text": "probabilistic"}], "question": "What is the name of one type of modern primality test?", "id": "57297d421d046914007794e6", "prediction_results": {"best_span_str": "probabilistic", "span_start_probs": [0.00225746794603765, 0.00031506948289461434, 0.00023828516714274883, 0.00023932047770358622, 0.007384459488093853, 0.0014765206724405289, 0.00017182264127768576, 4.8960155254462734e-05, 2.3017209969111718e-05, 0.00038170008338056505, 0.00013661725097335875, 0.004968089517205954, 0.0012576131848618388, 0.0008921227999962866, 9.6384588687215e-05, 0.7258886098861694, 0.0010879650944843888, 7.18572482583113e-05, 0.017007313668727875, 0.10648181289434433, 0.000714496651198715, 0.00016165259876288474, 4.238352630636655e-05, 7.999957597348839e-05, 0.10861963033676147, 0.0003092166152782738, 7.510578143410385e-05, 0.00971196684986353, 0.00011949631152674556, 1.8924776668427512e-05, 2.043849599431269e-05, 1.640801565372385e-05, 7.159802407841198e-06, 2.883139495679643e-05, 6.481210220954381e-06, 8.638433791929856e-05, 3.6867368180537596e-05, 5.269526081974618e-05, 2.9521670512622222e-05, 3.139827458653599e-05, 6.213405413291184e-06, 0.00017177725385408849, 3.0464275369013194e-07, 3.428625495871529e-05, 2.921700342994882e-06, 4.233682557241991e-05, 6.0687602854159195e-06, 2.5634087705839192e-06, 0.0004702663572970778, 4.274094408174278e-06, 1.9023094637304894e-06, 2.3182166842161678e-05, 0.0001934750471264124, 8.178677489922848e-06, 7.287816288226168e-07, 3.2979909292407683e-07, 2.221592512796633e-05, 6.9476832322834525e-06, 1.5481441550946329e-06, 2.97245918545741e-07, 3.649481732281856e-05, 3.3027986319211777e-06, 3.29379940922081e-06, 2.6891977995546767e-06, 8.633899597043637e-06, 1.3779560504190158e-05, 1.7121413975473843e-06, 4.561584319162648e-06, 0.00014390436990652233, 3.875771596995037e-07, 6.52142844046466e-05, 0.0005238805897533894, 3.795513521254179e-06, 2.6183136014878983e-06, 0.0004991359892301261, 1.7007902215482318e-06, 0.0005340754287317395, 2.62078197010851e-06, 4.25555946037548e-08, 1.0342657787987264e-06, 2.2914523469808046e-06, 3.467362219566894e-08, 2.0318660176599224e-07, 2.894054887292441e-06, 8.719995321371243e-07, 4.046088974973827e-07, 3.8361415022336587e-07, 2.6460087454438508e-08, 6.245953727557207e-07, 3.7500086591535364e-07, 4.5278770954837455e-08, 3.777119673031848e-06, 2.1453395504522632e-07, 9.173320904665161e-06, 8.875897947291378e-06, 4.798710506292991e-06, 5.236412334852503e-07, 1.5908653949736618e-05, 7.184017931649578e-07, 3.112708100161399e-07, 1.9091147862582147e-07, 2.989743208559048e-08, 1.2525511294825264e-07, 6.382106789715181e-07, 1.9569088181015104e-06, 7.749056294414913e-07, 1.1745243000405026e-06, 1.3807172763335984e-05, 1.8133312096324516e-06, 1.025138203658571e-06, 2.3122551283449866e-05, 2.9578663998108823e-06, 3.265562327214866e-06, 2.484635842847638e-06, 9.663230230216868e-06, 3.7737638649559813e-06, 1.2190905636089155e-06, 1.363236378892907e-06, 3.1421411677001743e-06, 1.2570093304020702e-06, 1.1595832916100335e-07, 7.563862709503155e-07, 9.054217571247136e-07, 1.5644980067008873e-07, 5.9201713753509466e-08, 7.699296133978351e-07, 1.2597557542903814e-05, 6.386612767528277e-07, 1.104922034755873e-06, 0.00013551919255405664, 6.719869816151913e-06, 1.7288527942582732e-06, 4.839524194721889e-07, 8.12370970493248e-08, 2.5759634354471928e-06, 0.0001347959623672068, 9.298574354943412e-07, 1.190096554637421e-06, 7.640648254891858e-05, 8.856509339238983e-06, 4.3819281927426346e-06, 2.5485676815151237e-05, 8.389769936911762e-05, 0.0005028111627325416, 6.1837008615839295e-06, 1.5854355694955302e-07, 1.4177517186908517e-05, 8.57398788411956e-07, 9.377994842907356e-07, 2.380268142587738e-07, 1.0266829804095323e-06, 3.6633198305935366e-06, 5.4905844990571495e-06, 9.702324632598902e-07, 1.9201690520276316e-05, 5.449010131997056e-06, 1.3992425920150708e-06, 0.00017118525283876806, 8.2593589922908e-07, 0.00014305491640698165, 1.503425295368288e-07, 7.85121514468301e-08, 1.2570758656238468e-07, 4.262789587983207e-08, 1.9652068417030932e-08, 1.987572915140845e-07, 2.1796225269099523e-07, 1.2910825297751671e-08, 1.3271144325699424e-06, 9.619729723908677e-08, 3.532389655447332e-06, 2.2859062482893933e-06, 2.007261770131663e-07, 5.419572701725883e-08, 2.2996408688413794e-07, 1.2795567272405606e-06, 2.2704489310854115e-07, 4.7991543397074565e-06, 1.6416660173490527e-06, 1.1711565548466751e-06, 7.81445180564333e-07, 4.363937478046864e-06, 1.8776348724713898e-06, 5.368412985262694e-07, 9.304281434197037e-08, 1.953804030563333e-06, 3.1756103453517426e-06, 1.3193208587836125e-06, 2.0030147140914778e-07, 3.094405110459775e-05, 8.666926873956982e-07, 2.0092008981009712e-06, 1.9520540206485748e-07, 1.5783194839968928e-07, 6.176418878567347e-07, 9.139610028796596e-07, 3.549201210262254e-05, 8.536136192560662e-06, 1.25746191770304e-05, 1.675296516623348e-05, 3.2861125873751007e-06, 8.584542001699447e-07, 2.5411291062482633e-05, 6.72521346132271e-05, 1.1763880138460081e-05, 9.933824912877753e-06, 0.0003393480437807739, 0.00020409036369528621, 1.1643359357549343e-05, 0.004211036488413811, 2.37927397392923e-05], "span_end_probs": [0.0006506859790533781, 0.0001495770993642509, 0.0017353537259623408, 4.137366886425298e-06, 1.55059478856856e-05, 1.7928028682945296e-05, 0.0016863972414284945, 2.0787229004781693e-06, 2.4122921331581892e-06, 7.15537607902661e-05, 3.1029671845317353e-06, 8.491054904880002e-05, 6.925941852387041e-05, 0.008752381429076195, 3.857051342492923e-05, 0.6082618236541748, 0.00044643503497354686, 1.2413195690896828e-05, 0.00010864875366678461, 6.580717308679596e-05, 0.025787994265556335, 0.05511121824383736, 0.035209618508815765, 2.205763667006977e-05, 0.000978501164354384, 0.23079276084899902, 0.018260644748806953, 7.682860450586304e-05, 0.00514622638002038, 1.2231858818267938e-05, 4.598997293214779e-06, 7.906569408078212e-06, 7.982474130585615e-07, 8.156104740919545e-06, 6.772111760255939e-07, 4.159823220106773e-06, 1.9181366042175796e-06, 1.3795992117593414e-06, 3.1743052204546984e-06, 3.0325285479193553e-05, 9.85039605438942e-07, 3.9518905396107584e-05, 5.658737904923328e-07, 0.0004842255439143628, 0.00013284340093377978, 1.0133790055988356e-05, 7.254715455928817e-06, 1.1089767895100522e-06, 1.2082310604455415e-05, 2.969283377751708e-05, 5.270918563837768e-07, 6.908782665959734e-07, 1.2016249456792139e-05, 0.00032263773027807474, 7.989553523657378e-06, 3.1089271033124533e-06, 6.693192062812159e-06, 1.716179212962743e-06, 2.0676854546763934e-05, 3.3205228646693286e-06, 1.0712304856497212e-06, 8.044797255024605e-07, 3.0698834052600432e-06, 1.462798536522314e-06, 9.787302133190678e-07, 4.1552993934601545e-06, 9.430951649846975e-06, 8.616999593868968e-07, 0.0002069269394269213, 5.748195235355524e-07, 5.838087417942006e-07, 6.530775863211602e-05, 5.7533892686478794e-05, 8.590791367169004e-07, 0.00027174470596946776, 6.355370715027675e-05, 7.446035306202248e-05, 0.0001284589379793033, 2.265336007667429e-07, 4.6467982883768855e-07, 7.637836097273976e-05, 3.991819539805874e-06, 5.694549258805637e-07, 4.508244444423326e-07, 2.4287971882586135e-06, 1.079372850654181e-06, 2.3295783648791257e-06, 2.262708278522041e-07, 5.700374003936304e-07, 1.7792540347727481e-06, 3.3650556474640325e-07, 7.391162944259122e-05, 1.4493035450868774e-05, 5.233856654740521e-07, 1.9094281014986336e-05, 1.3991307241667528e-06, 2.7612330200099677e-07, 5.683635663444875e-06, 4.7459010943384783e-07, 5.397422455644119e-07, 1.8139814983442193e-06, 2.190236898513831e-07, 3.2651962555974023e-07, 6.474282372437301e-07, 5.888357918593101e-06, 2.9270233426359482e-05, 2.4027398467296734e-05, 2.636552835610928e-06, 4.350793460616842e-06, 7.905049983492063e-07, 4.902219643554417e-07, 4.234186974372278e-07, 1.1297742275928613e-05, 1.0233212606181041e-06, 1.8814132545230677e-06, 9.454847145207168e-07, 3.963772314818925e-07, 4.818825345864752e-06, 4.295154212741181e-06, 2.3217578473122558e-06, 3.0436979159276234e-07, 5.694381002285809e-07, 1.5305411125154933e-06, 1.7465607015765272e-05, 3.194250666638254e-06, 1.212574261444388e-06, 1.1747741837098147e-06, 1.5792613794474164e-06, 3.7377049011411145e-07, 5.049387254985049e-06, 0.00011183537571923807, 4.329113835410681e-06, 1.3219708989709034e-06, 2.806717702696915e-07, 5.353366532290238e-07, 1.051965318765724e-05, 0.00022767783957533538, 8.709391840966418e-05, 2.4113446670526173e-06, 1.862800786511798e-06, 1.616908207324741e-06, 8.092397933978646e-07, 7.325706519623054e-06, 1.976477688003797e-05, 0.0001815927098505199, 7.764894007777912e-07, 4.041894953843439e-06, 1.0833916803676402e-06, 0.00012012507795589045, 1.1209180229343474e-05, 5.761542638538231e-07, 3.3383719255652977e-07, 4.3324389480403624e-06, 4.425991448897548e-07, 1.8098205600836081e-06, 4.634369361156132e-06, 8.971916258815327e-07, 0.00010032443242380396, 9.170806265501596e-07, 0.0016500864876434207, 1.0888489669014234e-05, 3.393140275420592e-07, 5.500801876223704e-07, 6.393748890332063e-07, 1.685938713080759e-07, 2.2141936995012657e-07, 5.940172513874131e-07, 1.279867376524635e-07, 5.174088801140897e-05, 2.509980731701944e-06, 4.255496719451912e-07, 9.377905030305556e-07, 2.569146602127148e-07, 2.3301659268781805e-07, 3.1604631089976465e-07, 1.033478952194855e-06, 3.2123679716278275e-07, 2.0223674255248625e-06, 1.6521902580279857e-05, 4.245905245170434e-07, 4.2811208800230816e-07, 1.4851358400846948e-06, 1.0317456826669513e-06, 2.258937638544012e-05, 1.7143758668680675e-05, 3.5143847298968467e-07, 4.538354403393896e-07, 1.2851271549152443e-06, 4.111796840788884e-07, 0.00019989567226730287, 3.591760832932778e-05, 2.8265736773391836e-07, 2.556461993208359e-07, 2.714884885790525e-07, 1.5398123650811613e-05, 3.2909890705923317e-06, 8.095237831184932e-07, 4.274018863270612e-07, 6.404419309546938e-06, 2.5547594759700587e-06, 3.5042943636653945e-05, 4.504310254560551e-06, 6.725591674694442e-07, 1.6017081634345232e-06, 5.349567345547257e-06, 6.246680754884437e-07, 2.1228879631962627e-06, 4.198417082079686e-05, 2.3659097223571735e-06, 0.0007101013325154781, 0.000266571412794292], "passage_tokens": ["Modern", "primality", "tests", "for", "general", "numbers", "n", "can", "be", "divided", "into", "two", "main", "classes", ",", "probabilistic", "(", "or", "\"", "Monte", "Carlo", "\"", ")", "and", "deterministic", "algorithms", ".", "Deterministic", "algorithms", "provide", "a", "way", "to", "tell", "for", "sure", "whether", "a", "given", "number", "is", "prime", "or", "not", ".", "For", "example", ",", "trial", "division", "is", "a", "deterministic", "algorithm", "because", ",", "if", "performed", "correctly", ",", "it", "will", "always", "identify", "a", "prime", "number", "as", "prime", "and", "a", "composite", "number", "as", "composite", ".", "Probabilistic", "algorithms", "are", "normally", "faster", ",", "but", "do", "not", "completely", "prove", "that", "a", "number", "is", "prime", ".", "These", "tests", "rely", "on", "testing", "a", "given", "number", "in", "a", "partly", "random", "way", ".", "For", "example", ",", "a", "given", "test", "might", "pass", "all", "the", "time", "if", "applied", "to", "a", "prime", "number", ",", "but", "pass", "only", "with", "probability", "p", "if", "applied", "to", "a", "composite", "number", ".", "If", "we", "repeat", "the", "test", "n", "times", "and", "pass", "every", "time", ",", "then", "the", "probability", "that", "our", "number", "is", "composite", "is", "1/(1-p)n", ",", "which", "decreases", "exponentially", "with", "the", "number", "of", "tests", ",", "so", "we", "can", "be", "as", "sure", "as", "we", "like", "(", "though", "never", "perfectly", "sure", ")", "that", "the", "number", "is", "prime", ".", "On", "the", "other", "hand", ",", "if", "the", "test", "ever", "fails", ",", "then", "we", "know", "that", "the", "number", "is", "composite", "."], "best_span": [15, 15], "best_span_char": [83, 96]}, "_id": "57297d421d046914007794e6", "context": "Modern primality tests for general numbers n can be divided into two main classes, probabilistic (or \"Monte Carlo\") and deterministic algorithms. Deterministic algorithms provide a way to tell for sure whether a given number is prime or not. For example, trial division is a deterministic algorithm because, if performed correctly, it will always identify a prime number as prime and a composite number as composite. Probabilistic algorithms are normally faster, but do not completely prove that a number is prime. These tests rely on testing a given number in a partly random way. For example, a given test might pass all the time if applied to a prime number, but pass only with probability p if applied to a composite number. If we repeat the test n times and pass every time, then the probability that our number is composite is 1/(1-p)n, which decreases exponentially with the number of tests, so we can be as sure as we like (though never perfectly sure) that the number is prime. On the other hand, if the test ever fails, then we know that the number is composite.", "title": "Prime_number", "machine_answer": {"answer_start": 83, "text": "probabilistic"}}