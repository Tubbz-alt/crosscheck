{"answers": [{"answer_start": 434, "text": "upper bound"}, {"answer_start": 113, "text": "upper and lower bounds"}, {"answer_start": 434, "text": "upper bound"}], "question": "A specific algorithm demonstrating T(n) represents what measure of time complexity?", "id": "56e1bc3ae3433e1400423107", "prediction_results": {"best_span_str": "lower", "span_start_probs": [1.0994145668519195e-05, 1.0263808690069709e-05, 1.6533301732124528e-06, 1.2586015145643614e-05, 4.931591774948174e-07, 6.471620395132049e-07, 7.520392131254994e-08, 2.2959506168263033e-05, 2.1739581370638916e-06, 2.8752321412639503e-08, 1.6607947372904164e-07, 6.858168717371882e-07, 7.929082494229078e-05, 1.923855734276003e-06, 5.358808152777783e-08, 1.194140281768341e-06, 0.00010063700756290928, 6.313286121439887e-06, 7.69338003010489e-05, 2.495400985935703e-05, 0.00018409227777738124, 0.0005948675679974258, 3.065729856643884e-07, 0.0002872705226764083, 4.938767233397812e-06, 8.761648473409878e-07, 1.4462947547144722e-05, 0.00018017746333498508, 1.3535777725337539e-05, 4.8054833001742736e-08, 2.023848765020375e-06, 3.8052696709200973e-06, 1.479973434470594e-06, 2.7320604203850962e-05, 8.187029743567109e-05, 5.170901567908004e-05, 1.254069502465427e-06, 4.2049937292176764e-06, 5.254352799966e-06, 4.991968125978019e-06, 1.4024174561200198e-05, 4.240310772729572e-06, 9.16302451514639e-05, 4.025420275866054e-05, 7.708493967584218e-07, 1.3091054825054016e-05, 5.79917923460016e-06, 4.497255213209428e-05, 0.0003546267398633063, 0.0001318503200309351, 1.7245685739908367e-05, 3.1210933229885995e-05, 0.001150996657088399, 0.009109357371926308, 8.951006748247892e-06, 5.038579911342822e-05, 7.231163908727467e-05, 3.6168921724311076e-06, 0.0005404578987509012, 0.00017148636106867343, 1.9893212083843537e-05, 1.0144076441065408e-05, 0.0002555567189119756, 6.161093187984079e-05, 8.779264317126945e-05, 7.5967654993291944e-06, 0.00022177978826221079, 2.272478559461888e-05, 0.00021277015912346542, 0.0004946637200191617, 1.619784825379611e-06, 0.0002916433440987021, 5.253839390206849e-07, 3.4089745895471424e-05, 6.380551440088311e-06, 0.0015400794800370932, 0.0007054824964143336, 0.0018283247482031584, 0.002538566244766116, 2.988515916513279e-05, 7.766333510517143e-06, 7.705965003879101e-07, 6.330269570753444e-06, 2.1211948478594422e-05, 3.690700759761967e-05, 0.00010291796934325248, 5.932321982982103e-06, 0.0007148294826038182, 0.0004317814018577337, 7.873532740632072e-05, 0.008649644441902637, 0.0010420490289106965, 0.0002129855565726757, 0.001546660903841257, 0.0010689377086237073, 0.0005536191747523844, 0.004343581851571798, 5.601068551186472e-05, 0.0005978040280751884, 0.00046965491492301226, 6.75637784297578e-05, 0.0007935724570415914, 0.06491924822330475, 0.00013854900316800922, 9.108402082347311e-06, 2.2291200366453268e-05, 7.4143490564893e-06, 2.01902437879653e-07, 1.5345822248491459e-06, 5.311469976732042e-06, 4.395144515001448e-06, 0.0008798437775112689, 0.0018898694543167949, 1.662496833887417e-05, 1.0013582141255029e-06, 2.579491956566926e-05, 9.350528671348002e-06, 8.445774255960714e-06, 2.775870200366626e-07, 4.353958138381131e-05, 0.0007264441810548306, 9.579465768183582e-06, 2.289027634105878e-06, 2.7816965939564398e-06, 2.6604968752508285e-06, 9.394446465194051e-07, 9.308959306508768e-06, 5.672266070178011e-07, 2.0166150704881147e-07, 2.4525391495444637e-07, 2.0623492673621513e-06, 2.2640128918283153e-06, 2.4270048015750945e-06, 1.9559176962502534e-06, 8.583698445363552e-07, 2.856430182873737e-05, 8.491073458571918e-06, 2.6759389584185556e-05, 0.0001820178295020014, 4.4514085857372265e-06, 7.630859499840881e-07, 3.4286822483409196e-06, 1.2191712812636979e-05, 2.873712219297886e-05, 1.5935945612000069e-06, 8.458021056867437e-07, 1.6387065215894836e-06, 4.141987233197142e-07, 2.0718815108011768e-07, 1.3051749192527495e-07, 3.2150383049156517e-06, 8.261950279120356e-05, 1.9410113054618705e-06, 4.5656418024009326e-07, 2.823680915753357e-06, 5.611713049802347e-07, 5.309049356583273e-06, 3.521640792314429e-07, 9.545918828735012e-07, 6.641639629378915e-07, 6.392921477527125e-06, 0.009213950484991074, 0.0042748888954520226, 0.024748526513576508, 0.03477665036916733, 0.00018922545132227242, 7.483636181859765e-07, 4.137178621022031e-05, 2.66528900283447e-06, 0.000133465975522995, 0.0009812918724492192, 0.00047999006346799433, 0.00042145332554355264, 0.0005785675602965057, 0.0015311191091313958, 0.062477901577949524, 6.48781715426594e-05, 8.798609633231536e-05, 6.858679262222722e-05, 0.0026029187720268965, 0.0014693313278257847, 0.7437313199043274, 1.455468463973375e-05, 7.291013753274456e-05, 1.007137143460568e-06, 2.565544673416298e-05], "span_end_probs": [5.882246114197187e-06, 4.420463938004104e-06, 8.877714208210818e-07, 1.142577275459189e-05, 0.00034001830499619246, 2.5048971110663842e-06, 1.1659968777166796e-06, 1.0313351594959386e-05, 0.00043065426871180534, 1.5050180991238449e-05, 1.253148184332531e-06, 6.467926141340286e-07, 1.7602693333174102e-05, 9.996562585001811e-05, 3.709386146510951e-05, 1.5083745893207379e-05, 2.1006917449994944e-05, 2.086534550471697e-06, 5.912834967602976e-05, 1.4863912838336546e-06, 0.00012493404210545123, 0.0003748114104382694, 2.2824451662017964e-06, 0.0006125582149252295, 0.0001719201827654615, 1.5430191524501424e-06, 2.515185542506515e-06, 0.000108464686491061, 0.0003853070084005594, 9.190339937958925e-07, 4.598798113875091e-05, 2.9576229280792177e-05, 1.1932060033359448e-06, 1.437637706658279e-06, 4.5104188757250085e-06, 4.1791590774664655e-05, 6.358178507070988e-05, 7.646053745702375e-06, 6.818344218118e-07, 1.4310662663774565e-06, 0.0002617180871311575, 7.96625463408418e-05, 7.548845246674318e-07, 6.620011845370755e-06, 1.449775055561986e-07, 2.588563461358717e-07, 1.368727953376947e-05, 3.576456492737634e-06, 4.861907655140385e-06, 3.931298851966858e-05, 1.946418933584937e-06, 1.393693423779041e-06, 7.918764822534285e-06, 0.004252422600984573, 9.01686871657148e-06, 0.0030791359022259712, 0.0037213764153420925, 2.4884502636268735e-05, 4.313166300562443e-06, 0.00011717722372850403, 0.0015164128271862864, 0.0002427533472655341, 9.455835424887482e-06, 5.717077442568552e-07, 2.8144575026090024e-06, 2.1443929654196836e-05, 6.388715701177716e-05, 1.933022304001497e-06, 3.1525237318419386e-06, 2.8565344109665602e-05, 1.516158818049007e-06, 0.0004939409554935992, 1.2409225291776238e-06, 0.000918885983992368, 0.00018751922470983118, 2.4919022507674526e-06, 1.7869464500108734e-05, 3.982017915404867e-06, 0.0012034032260999084, 0.0002801381633616984, 0.00011724150681402534, 0.00021758505317848176, 9.58928922045743e-07, 1.1196739251317922e-06, 4.570415967464214e-06, 4.606672519003041e-05, 3.944973059333279e-07, 1.2090710015399964e-06, 0.0012969978852197528, 0.0001664430310484022, 0.0002505611628293991, 0.00045970879727974534, 5.698051154467976e-06, 0.00034664885606616735, 0.0006293327896855772, 1.3039112673141062e-05, 0.00030290448921732605, 1.8467708287062123e-05, 8.825213626550976e-06, 5.973696170258336e-05, 0.00055458873976022, 1.7014644981827587e-05, 0.0014737676829099655, 0.038893088698387146, 2.1383766579674557e-05, 0.0002596454578451812, 0.000896468642167747, 0.0008999588317237794, 0.0002687362430151552, 4.197780799586326e-05, 3.866636689053848e-06, 2.4631161068100482e-05, 0.0010024328948929906, 0.0018865629099309444, 4.084036390850088e-06, 6.0559714256669395e-06, 2.50426660386438e-06, 0.00022570222790818661, 1.7705395293887705e-05, 8.839359111334488e-07, 0.00011047029693145305, 0.00025772463413886726, 1.7246298739337362e-05, 9.473016007177648e-07, 0.00010677871614461765, 1.2051108342348016e-06, 2.982694923048257e-06, 3.974088940594811e-06, 4.297352643334307e-05, 7.29432485968573e-07, 1.3665076039615087e-06, 4.298840678984561e-07, 9.561637170918402e-07, 0.00014753462164662778, 6.140716141089797e-05, 1.4664484524473664e-06, 6.233674866962247e-06, 6.913489778526127e-05, 2.3984108338481747e-05, 1.4784610357310157e-05, 0.00010299143468728289, 0.0001237730321008712, 5.715553925256245e-06, 1.6425332432845607e-05, 2.347431063753902e-06, 1.3917914429839584e-06, 3.8601243431912735e-05, 6.077877060306491e-06, 3.8930869777686894e-05, 7.188092695287196e-06, 5.639155915559968e-07, 1.2541644309749245e-06, 1.6643532944726758e-05, 4.0773483078737627e-07, 8.246232141573273e-07, 4.5090405365044717e-07, 2.737441536737606e-05, 3.7612693404298625e-07, 5.924580364080612e-07, 8.302210335386917e-05, 3.776362063945271e-05, 2.862215751520125e-06, 2.3929685994517058e-05, 1.295930087508168e-05, 0.006575542502105236, 0.005222559440881014, 1.5888064808677882e-05, 0.0032772154081612825, 0.0008930570329539478, 2.1596365513687488e-06, 2.057722895187908e-06, 0.006929410621523857, 0.00021258441847749054, 0.0006718451040796936, 7.964480573718902e-06, 0.02364412136375904, 0.013963475823402405, 3.087530785705894e-05, 1.1151668331876863e-05, 0.00011640647426247597, 0.0003431426302995533, 0.8604273200035095, 0.0004609564784914255, 0.000792174891103059, 0.0029928789008408785, 0.0018409284530207515], "passage_tokens": ["To", "classify", "the", "computation", "time", "(", "or", "similar", "resources", ",", "such", "as", "space", "consumption", ")", ",", "one", "is", "interested", "in", "proving", "upper", "and", "lower", "bounds", "on", "the", "minimum", "amount", "of", "time", "required", "by", "the", "most", "efficient", "algorithm", "solving", "a", "given", "problem", ".", "The", "complexity", "of", "an", "algorithm", "is", "usually", "taken", "to", "be", "its", "worst", "-", "case", "complexity", ",", "unless", "specified", "otherwise", ".", "Analyzing", "a", "particular", "algorithm", "falls", "under", "the", "field", "of", "analysis", "of", "algorithms", ".", "To", "show", "an", "upper", "bound", "T(n", ")", "on", "the", "time", "complexity", "of", "a", "problem", ",", "one", "needs", "to", "show", "only", "that", "there", "is", "a", "particular", "algorithm", "with", "running", "time", "at", "most", "T(n", ")", ".", "However", ",", "proving", "lower", "bounds", "is", "much", "more", "difficult", ",", "since", "lower", "bounds", "make", "a", "statement", "about", "all", "possible", "algorithms", "that", "solve", "a", "given", "problem", ".", "The", "phrase", "\"", "all", "possible", "algorithms", "\"", "includes", "not", "just", "the", "algorithms", "known", "today", ",", "but", "any", "algorithm", "that", "might", "be", "discovered", "in", "the", "future", ".", "To", "show", "a", "lower", "bound", "of", "T(n", ")", "for", "a", "problem", "requires", "showing", "that", "no", "algorithm", "can", "have", "time", "complexity", "lower", "than", "T(n", ")", "."], "best_span": [181, 181], "best_span_char": [597, 602]}, "_id": "56e1bc3ae3433e1400423107", "context": "To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient algorithm solving a given problem. The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms. To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n). However, proving lower bounds is much more difficult, since lower bounds make a statement about all possible algorithms that solve a given problem. The phrase \"all possible algorithms\" includes not just the algorithms known today, but any algorithm that might be discovered in the future. To show a lower bound of T(n) for a problem requires showing that no algorithm can have time complexity lower than T(n).", "title": "Computational_complexity_theory", "machine_answer": {"answer_start": 597, "text": "lower"}}