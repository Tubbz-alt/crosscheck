{"answers": [{"answer_start": 469, "text": "Karp reductions and Levin reductions"}, {"answer_start": 452, "text": "Cook reductions, Karp reductions"}], "question": "What are two examples of different types of reduction?", "id": "56e1c9bfe3433e1400423195", "prediction_results": {"best_span_str": "Cook reductions, Karp reductions and Levin reductions", "span_start_probs": [5.599313794846239e-07, 1.9861308828694746e-06, 3.397642558411462e-07, 2.8105806570977165e-09, 1.216003475690286e-08, 4.219213423084511e-09, 7.499671994537493e-09, 1.4863080544103013e-08, 1.68997232874446e-10, 3.678023219322313e-08, 6.479000091985654e-08, 3.507927814894174e-08, 3.67001547374457e-07, 1.4263271452819026e-07, 1.3919229324699245e-08, 1.4166019468575541e-07, 1.0317750565036476e-07, 5.342104536509851e-10, 8.202479762076109e-08, 4.604528314189338e-08, 6.153866749514236e-09, 3.6536071945647564e-08, 7.932152357170708e-08, 2.1637042380007188e-08, 1.713153636728748e-07, 7.283257730250625e-08, 7.045387206972009e-08, 2.486195000983571e-07, 1.2894570033950004e-07, 6.711743383291946e-10, 1.518913173015335e-08, 2.6966073818357472e-08, 6.745962455312338e-09, 4.617991322675152e-09, 1.961241835601868e-08, 1.1057318616281009e-08, 6.137786812132617e-08, 5.747982978476784e-09, 5.625725307822904e-08, 4.73626968755525e-08, 8.545493201950194e-09, 3.445554952463681e-08, 2.2723872561414282e-08, 7.501789411890059e-09, 4.865074174631445e-07, 2.852402758435346e-07, 2.932564768798329e-07, 3.6175026707496727e-07, 6.481101166855296e-08, 7.119777656328097e-09, 1.8474915464139485e-07, 1.8193658490872622e-07, 9.185803833133832e-07, 4.975248089067463e-07, 5.601299868374099e-09, 1.3784757868506858e-07, 8.057537748129562e-09, 6.826452363384305e-07, 1.3831339629177819e-08, 7.43191264973575e-07, 4.2561634927551495e-07, 5.391266313381493e-07, 4.115515395142211e-08, 7.423794841088238e-07, 7.950203162465641e-09, 8.801264606006498e-09, 6.038541755515325e-07, 2.826466527494631e-07, 3.0101730885689904e-07, 1.8963371985591948e-05, 8.155951945809647e-06, 3.2431725571768766e-07, 8.73330282047391e-06, 5.050366326031508e-06, 7.376356165877951e-07, 8.28246174933156e-06, 2.215612039435655e-05, 2.8519798433990218e-06, 3.267155079811346e-08, 4.421417997946264e-06, 2.204368911407073e-06, 0.0001822080957936123, 2.9912258469266817e-05, 0.00017420259246136993, 0.00036649336107075214, 1.5346282680184231e-06, 0.00012891466030851007, 6.436905550799565e-06, 0.000887691683601588, 0.014146251603960991, 0.8834028840065002, 0.0003744790446944535, 1.5253622223099228e-05, 0.0028966476675122976, 0.00018005214224103838, 9.615426961318008e-07, 0.0002214088017353788, 4.681883365265094e-05, 1.2956962791577098e-06, 1.6543672245461494e-06, 3.932717299903743e-05, 6.593854777747765e-05, 3.6002957131131552e-06, 3.34929209202528e-05, 0.0001761950261425227, 5.164191634321469e-07, 9.52661648625508e-05, 4.4710709516948555e-06, 0.0001357456058030948, 0.0014293959829956293, 0.09213638305664062, 8.25593997433316e-06, 0.00018107795040123165, 0.00019718064868357033, 1.1668067827486084e-06, 0.0022497239988297224, 1.3775564866591594e-06, 5.2181887440383434e-05, 2.511793172743637e-05, 3.6595113215298625e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [1.510472543486685e-06, 2.413039965176722e-06, 4.5300494093680754e-06, 4.105932305265014e-08, 1.5237026218528626e-07, 3.5772096396158304e-08, 2.6568459432496638e-08, 1.8191585127169674e-07, 1.2701354634714335e-08, 3.625186906219824e-08, 2.0614377717720345e-05, 4.184208592050709e-06, 3.873334364357106e-08, 7.832006758690113e-07, 1.551581974013061e-08, 2.493349349208529e-08, 2.340885743024046e-07, 1.0454844989737921e-08, 5.556682936003199e-08, 2.0599306083113333e-07, 1.3663155939980243e-08, 3.313322594067358e-08, 3.4241602406837046e-06, 1.1283748335699784e-06, 2.482269678694138e-08, 1.6932190760599042e-08, 1.3155903921813206e-08, 6.764555848803866e-08, 9.152662272526868e-08, 6.04334982057253e-09, 1.4274225357269188e-08, 4.306077698856825e-07, 2.1535010219508877e-08, 1.2521955916611205e-08, 2.8938474727624452e-08, 1.7243474204065024e-08, 6.045958400591189e-08, 1.157054008160685e-08, 3.444055352019859e-08, 8.963928053162817e-07, 2.5047401663869096e-07, 1.3929396303069552e-08, 7.167439264321729e-08, 3.1891090657154564e-08, 3.535048520575401e-08, 2.3073569721532294e-08, 1.5707138345533167e-07, 3.7057290569464385e-07, 1.254744397272134e-08, 8.786131822091647e-09, 1.428123255209357e-07, 1.9616864577187698e-08, 1.3549564137349535e-08, 9.602474619896384e-07, 1.4256051450445284e-08, 1.8495181564048835e-07, 3.352085187202647e-08, 8.227158900808718e-07, 1.2145703998100998e-08, 7.382752897910905e-08, 7.941837765201853e-08, 5.012340693610895e-07, 1.611855005023699e-08, 1.3389792457019212e-06, 1.2310111685565062e-07, 1.734053967084037e-08, 5.263481028805472e-08, 2.363683471173772e-08, 1.4593065422729978e-08, 6.382623496392625e-07, 3.948679818677192e-07, 2.16973710109869e-08, 4.948573860019678e-06, 3.8558738424399053e-07, 2.1205829980885937e-08, 1.7818271658143203e-07, 1.175141619569331e-06, 4.275127309938398e-07, 1.2828886397642236e-08, 1.289751617150614e-05, 1.6636084865240264e-07, 1.476140312206553e-07, 2.4164757306266438e-08, 3.365596157323125e-08, 1.4517283375425905e-07, 1.8107058963323652e-08, 1.0350260708946735e-05, 3.223402700314182e-07, 2.1216825984993193e-07, 3.163598876199103e-07, 2.9735168936895207e-05, 0.0017394379246979952, 6.209220009623095e-05, 5.638778384309262e-05, 0.0003213398449588567, 2.0064233467564918e-05, 0.06884245574474335, 0.6991515755653381, 0.0028676281217485666, 2.3483989934902638e-05, 3.532945584083791e-06, 0.00028885569190606475, 2.510655804144335e-06, 3.96533187085879e-06, 0.0001795465941540897, 1.7412279476047843e-06, 0.007802090607583523, 9.456487896386534e-05, 7.39695110496541e-07, 4.3077824329884606e-07, 1.797099912437261e-06, 8.142397973642801e-07, 7.680054113734514e-05, 0.0014339378103613853, 5.293301910569426e-06, 5.302191129885614e-05, 1.017516933643492e-05, 0.008047261275351048, 0.20109497010707855, 0.007703975774347782, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["Many", "complexity", "classes", "are", "defined", "using", "the", "concept", "of", "a", "reduction", ".", "A", "reduction", "is", "a", "transformation", "of", "one", "problem", "into", "another", "problem", ".", "It", "captures", "the", "informal", "notion", "of", "a", "problem", "being", "at", "least", "as", "difficult", "as", "another", "problem", ".", "For", "instance", ",", "if", "a", "problem", "X", "can", "be", "solved", "using", "an", "algorithm", "for", "Y", ",", "X", "is", "no", "more", "difficult", "than", "Y", ",", "and", "we", "say", "that", "X", "reduces", "to", "Y.", "There", "are", "many", "different", "types", "of", "reductions", ",", "based", "on", "the", "method", "of", "reduction", ",", "such", "as", "Cook", "reductions", ",", "Karp", "reductions", "and", "Levin", "reductions", ",", "and", "the", "bound", "on", "the", "complexity", "of", "reductions", ",", "such", "as", "polynomial", "-", "time", "reductions", "or", "log", "-", "space", "reductions", "."], "best_span": [90, 97], "best_span_char": [452, 408]}, "_id": "56e1c9bfe3433e1400423195", "context": "Many complexity classes are defined using the concept of a reduction. A reduction is a transformation of one problem into another problem. It captures the informal notion of a problem being at least as difficult as another problem. For instance, if a problem X can be solved using an algorithm for Y, X is no more difficult than Y, and we say that X reduces to Y. There are many different types of reductions, based on the method of reduction, such as Cook reductions, Karp reductions and Levin reductions, and the bound on the complexity of reductions, such as polynomial-time reductions or log-space reductions.", "title": "Computational_complexity_theory", "machine_answer": {"answer_start": 452, "text": "Cook reductions, Karp reductions and Levin reductions"}}