{"answers": [{"answer_start": 281, "text": "T(n) = O(n2)"}, {"answer_start": 281, "text": "T(n) = O(n2)"}, {"answer_start": 281, "text": "T(n) = O(n2)"}], "question": "How would one write T(n) = 7n2 + 15n + 40 in big O notation? ", "id": "56e1bd4acd28a01900c67afe", "prediction_results": {"best_span_str": "O(n2", "span_start_probs": [0.0011344838421791792, 7.40940663490619e-07, 7.166788418544456e-05, 6.154015409265412e-06, 9.336687298855395e-07, 8.881037501851097e-06, 1.7074007701012306e-05, 3.542009653756395e-05, 2.1136007489985786e-05, 2.5867944714264013e-05, 1.094397248380119e-06, 2.8182930691400543e-06, 9.824995686358307e-06, 0.00019549897115211934, 0.009165579453110695, 0.0018371498445048928, 0.00010625516733853146, 4.1834451280919893e-07, 0.00011713209823938087, 1.1692956832121126e-05, 4.177853952569421e-06, 9.243351814802736e-05, 7.624983845744282e-05, 0.0001237136748386547, 0.0001748391514411196, 9.473449608776718e-05, 1.3616785281556076e-06, 1.9259023247286677e-05, 4.4033917220076546e-05, 2.3027007046039216e-05, 5.802048690384254e-07, 1.5445453755091876e-05, 5.390190926846117e-05, 3.5924101666751085e-06, 4.224469194014091e-06, 2.2460219497588696e-06, 0.0003288596053607762, 2.2169957446749322e-05, 6.7581995608634315e-06, 0.001086298143491149, 0.0002789145801216364, 9.219906473845185e-07, 3.225291584385559e-05, 6.1817467212677e-05, 0.00018418944091536105, 8.059896208578721e-05, 6.378244142979383e-05, 0.0004731280205305666, 3.50331210938748e-05, 0.0013905382947996259, 0.005895897280424833, 0.00022719883418176323, 0.00017289487004745752, 0.030608531087636948, 0.0004548922006506473, 0.00022241038095671684, 0.0005575693212449551, 2.8354266760288738e-05, 0.003495489712804556, 0.940260648727417, 8.53604287840426e-05, 0.00044193450594320893, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [0.0006880556466057897, 2.5785959223867394e-05, 0.0032883291132748127, 0.010021720081567764, 5.548174522118643e-05, 0.0001361377799184993, 0.0008136617252603173, 9.273305477108806e-05, 5.828549183206633e-05, 5.626738129649311e-05, 3.433450183365494e-05, 0.0023128322791308165, 0.00017179192218463868, 2.4391756596742198e-05, 0.0016175283817574382, 0.0011708495439961553, 0.002672742586582899, 8.998248631542083e-06, 0.00013322547602001578, 0.010203244164586067, 0.000831622863188386, 2.4904646124923602e-05, 7.992628525244072e-06, 2.4356748326681554e-05, 0.0002672091650310904, 0.001764586428180337, 9.473485079070088e-06, 2.0698113075923175e-05, 6.342525739455596e-05, 0.0003802384890150279, 9.118446541833691e-06, 2.0391002180986106e-05, 9.912853420246392e-05, 0.0006917888531461358, 0.0008664812194183469, 0.00027966793277300894, 1.8655653548194095e-05, 2.9683986213058233e-05, 7.2787388489814475e-06, 1.1184520189999603e-05, 3.544617811712669e-06, 2.659618303368916e-06, 1.371010785078397e-05, 1.5245291251630988e-05, 4.6840275899739936e-05, 2.1215442757238634e-05, 2.7242806027061306e-05, 0.01320748683065176, 0.00031784691964276135, 9.499278348812368e-06, 5.1008457376156e-05, 5.912864799029194e-05, 0.0007742844172753394, 0.004805438686162233, 3.4302036510780454e-05, 8.411813905695453e-05, 6.378113175742328e-05, 9.679238246462774e-06, 0.00010634461796144024, 0.8823657035827637, 0.053779780864715576, 0.005186824128031731, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["Upper", "and", "lower", "bounds", "are", "usually", "stated", "using", "the", "big", "O", "notation", ",", "which", "hides", "constant", "factors", "and", "smaller", "terms", ".", "This", "makes", "the", "bounds", "independent", "of", "the", "specific", "details", "of", "the", "computational", "model", "used", ".", "For", "instance", ",", "if", "T(n", ")", "=", "7n2", "+", "15n", "+", "40", ",", "in", "big", "O", "notation", "one", "would", "write", "T(n", ")", "=", "O(n2", ")", "."], "best_span": [59, 59], "best_span_char": [288, 292]}, "_id": "56e1bd4acd28a01900c67afe", "context": "Upper and lower bounds are usually stated using the big O notation, which hides constant factors and smaller terms. This makes the bounds independent of the specific details of the computational model used. For instance, if T(n) = 7n2 + 15n + 40, in big O notation one would write T(n) = O(n2).", "title": "Computational_complexity_theory", "machine_answer": {"answer_start": 288, "text": "O(n2"}}