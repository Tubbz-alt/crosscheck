{"answers": [{"answer_start": 178, "text": "the most efficient algorithm"}, {"answer_start": 178, "text": "the most efficient algorithm"}, {"answer_start": 178, "text": "the most efficient algorithm solving a given problem"}], "question": "Classification of resources is contingent on determining the upper and lower bounds of minimum time required by what?  ", "id": "56e1bc3ae3433e1400423104", "prediction_results": {"best_span_str": "the most efficient algorithm", "span_start_probs": [2.681242403923534e-05, 2.665303327376023e-05, 1.2679529390879907e-05, 5.578184573096223e-05, 2.73195922773084e-07, 3.3702298196658376e-07, 3.813142157582661e-08, 1.374914063489996e-06, 9.016785043058917e-07, 7.384472411331444e-08, 4.785966325471236e-07, 1.4547365481121233e-06, 5.0625865696929395e-05, 7.4862640531137e-07, 1.0657649340828357e-07, 2.541779849707382e-06, 0.00015484336472582072, 6.984374067542376e-06, 6.197785114636645e-05, 1.2460543075576425e-05, 9.446942567592487e-05, 0.0001410463300999254, 1.5186948587597726e-07, 5.639650044031441e-05, 7.59139220463112e-06, 1.2969536328455433e-05, 0.000125799750094302, 0.00011346747487550601, 6.528172525577247e-05, 8.182047167792916e-06, 4.2567713535390794e-05, 0.00039957102853804827, 0.010979236103594303, 0.42646872997283936, 0.27508580684661865, 0.26844027638435364, 0.013351242057979107, 0.0004523195093497634, 0.0009443195885978639, 0.0005811939481645823, 0.0007885346421971917, 9.51681886363076e-06, 4.281742076273076e-05, 5.102443537907675e-05, 3.2212147971222294e-07, 6.695624961139401e-06, 1.038063783198595e-05, 3.813740363511897e-07, 4.266356881998945e-06, 1.4387128430826124e-06, 5.441072516987333e-07, 3.418719529690861e-07, 3.2588079648121493e-06, 1.097058157029096e-05, 5.336084640816807e-08, 3.796528744715033e-07, 2.6656073259800905e-06, 1.531384974384764e-08, 8.633145398562192e-07, 1.2743986133045837e-07, 1.0098690950144373e-07, 1.9598903122641786e-07, 1.908195554278791e-05, 4.115255251235794e-06, 3.2691016258468153e-06, 3.6391816138348076e-06, 2.594618706552865e-07, 1.9521731076110882e-07, 1.6233015003308537e-06, 2.1832872789673274e-06, 2.0353830620933877e-08, 7.31324917069287e-07, 2.225544015743708e-08, 1.5432691498062923e-06, 3.7528078422610633e-08, 9.675296723798965e-07, 3.073007519560633e-07, 5.053180416325631e-07, 9.845597332969191e-07, 2.2770711893826956e-07, 3.196232682967093e-07, 1.3245652574767064e-08, 2.8909943239341374e-07, 3.02303732269138e-07, 2.811845263295254e-07, 8.922767165131518e-07, 1.742210997690563e-08, 2.0327071581505152e-07, 8.353534752814085e-08, 1.0746684431239828e-08, 7.100782113411697e-07, 3.559028627364569e-08, 1.1151363388250957e-08, 6.545725028672678e-08, 7.266811508088722e-08, 9.998615269068978e-08, 1.05807293948601e-06, 3.6459383068176976e-08, 2.804258656396996e-07, 4.56247391866782e-07, 3.835515656192001e-07, 2.0983677018193703e-08, 3.8619353404101275e-07, 3.2480198086659584e-08, 1.1507671260346797e-08, 3.0662373973200374e-08, 7.850226779737568e-08, 2.5210531440222894e-09, 2.4424551270385564e-08, 4.2961431745425216e-07, 2.0776593601112836e-07, 3.425125396461226e-05, 0.00017137848772108555, 6.645569214924762e-07, 2.2204149274784868e-07, 6.6696670728561e-06, 7.560109679616289e-06, 5.2152790885884315e-06, 2.2884569261805154e-07, 1.2962352229806129e-05, 0.000515555904712528, 2.3018824322207365e-06, 8.410281225224026e-06, 2.5272349375882186e-05, 1.8865726815420203e-05, 2.5303990696556866e-05, 0.00016258301911875606, 2.9435332180582918e-05, 5.120533751323819e-05, 3.3920998703251826e-06, 1.8381275367573835e-05, 6.776166173949605e-06, 3.1433910407940857e-06, 1.3533275705412962e-05, 2.9158479719626484e-07, 2.19277126234374e-06, 8.098226089714444e-07, 1.0097194262925768e-06, 2.8210515665705316e-06, 2.604003555006784e-07, 8.947896503741504e-07, 6.396154361709705e-08, 1.4905140233167913e-07, 4.438037137788342e-07, 3.9680820407284045e-08, 5.1816954282912775e-08, 1.7811103703024855e-07, 7.779532573692904e-09, 2.1681660911099243e-09, 1.1372773833784322e-09, 3.034540441149147e-08, 3.654196518709796e-07, 1.0024135832509273e-07, 4.330622971338016e-09, 1.4128433534210671e-08, 3.2786289239084e-09, 2.3564606266290866e-08, 4.2879482187174744e-09, 1.0248536241874717e-08, 6.985362066558309e-09, 1.2902983570484139e-08, 9.801209444049164e-07, 3.635149141700822e-07, 4.6982694357211585e-07, 1.5384596281364793e-06, 1.2220722567235498e-07, 4.289183674899277e-09, 3.5705690493159636e-07, 6.073052283284142e-09, 1.5171328016094776e-07, 5.173580461814709e-07, 3.361809604029986e-07, 5.223897687756107e-07, 8.413081559410784e-06, 4.389088644529693e-06, 7.296036346815526e-05, 3.871015451295534e-06, 1.1648968012423211e-07, 5.9432004206882993e-08, 5.909530500503024e-07, 5.45620423508808e-07, 8.925021575123537e-07, 7.76618946929375e-09, 3.130618040358968e-07, 2.8857409795080002e-09, 1.7540821772854542e-07], "span_end_probs": [6.5862554947671015e-06, 3.4030474580504233e-06, 1.4526676750392653e-06, 3.4119238989660516e-05, 0.0003131571284029633, 1.463848889216024e-06, 6.823447620263323e-07, 2.053767730103573e-06, 6.476744601968676e-05, 1.5905180816844222e-06, 5.988135853840504e-07, 5.345926297195547e-07, 6.313555786618963e-06, 2.2818270736024715e-05, 3.0316256015794352e-05, 3.4442125524947187e-06, 2.5274498511862475e-06, 4.4141870603198186e-07, 3.977958840550855e-06, 3.59936137783734e-07, 4.043527951580472e-06, 9.163446520688012e-06, 1.2997874421216693e-07, 3.367090175743215e-05, 4.570082637656014e-06, 3.592697908061382e-07, 6.320872216747375e-07, 2.741951220741612e-06, 3.975539129896788e-06, 8.257041486103844e-07, 5.328053703124169e-06, 4.003560661658412e-06, 3.1592278446623823e-06, 2.8013630071654916e-05, 0.0001887002872535959, 0.0012178057804703712, 0.7917082905769348, 0.014522605575621128, 0.00011979281407548115, 0.0002178110444219783, 0.16982907056808472, 0.020528597757220268, 2.297589389854693e-06, 1.288273688260233e-05, 3.1580154313815e-07, 6.556565494975075e-07, 0.00031311591737903655, 1.6977689938357798e-06, 1.0964934062940301e-06, 2.515702590244473e-06, 3.3638420404713543e-07, 2.6880005066232115e-07, 5.270499059406575e-07, 4.066487690579379e-06, 2.1922446080679947e-07, 1.537386378913652e-05, 7.862230995669961e-05, 7.818101721568382e-07, 3.77901869796915e-07, 9.535380058878218e-07, 5.3020889026811346e-05, 4.41818410763517e-05, 7.859142101551697e-07, 1.9539214690666995e-07, 1.6005813563424454e-07, 1.4344113878905773e-05, 6.231170118553564e-06, 1.5204506098598358e-07, 1.1799505017506817e-07, 3.4523631597949134e-07, 4.920895690929683e-08, 9.433380796508573e-07, 5.592401208787123e-08, 7.994142652023584e-05, 2.6351981432526372e-05, 1.4196345432537782e-07, 2.0115248844376765e-07, 9.790149846367058e-08, 1.166162064691889e-06, 1.6162084648385644e-07, 7.906710379756987e-06, 1.8480985090718605e-05, 8.194523104521068e-08, 9.038172521513843e-08, 2.653124511198257e-07, 1.3456073020279291e-06, 4.2858804505385706e-08, 7.464912954446845e-08, 1.863620309450198e-05, 1.208051457979309e-06, 2.6511898454373295e-07, 1.9095566017313104e-07, 4.0376708199119093e-08, 2.0398763922457874e-07, 1.7682403097296628e-07, 8.235198123429655e-08, 2.6629777494235896e-07, 6.861304058247697e-08, 1.0613201339992884e-07, 1.1444262781878933e-07, 6.44729607301997e-06, 6.135189778433414e-08, 9.1896126264146e-08, 9.784815802049707e-07, 4.080997584310353e-08, 7.018913095180324e-08, 2.8884594485134585e-06, 5.977497494313866e-06, 2.179371449528844e-06, 3.7310829270609247e-07, 1.6768959198998346e-07, 2.410972399502498e-07, 1.3347111234907061e-05, 2.3134621187637094e-06, 4.246327023338381e-08, 7.90231524661067e-08, 5.5870067683372326e-08, 7.526777153543662e-06, 5.472664952321793e-07, 6.906432048481292e-08, 1.838009302446153e-05, 8.050021165217913e-07, 9.338112505474783e-08, 8.588425259858923e-08, 9.437187031835492e-07, 1.181617079737407e-07, 1.973962184820266e-07, 2.392294504716119e-07, 1.3662664969160687e-05, 9.897422614812967e-08, 1.9555341168597806e-07, 9.912233878139887e-08, 1.927128607803752e-07, 8.31194338388741e-05, 3.671546437544748e-05, 1.6698565730166592e-07, 3.9886157310320414e-07, 8.707859251444461e-07, 1.8605834384288755e-07, 1.2214380262776103e-07, 1.5138401067815721e-05, 2.9999443995620823e-06, 2.3017200589947606e-07, 1.746211921727081e-07, 8.312541410759877e-08, 6.50182911954289e-08, 1.182450773740129e-06, 1.296227480906964e-07, 6.112136929914413e-07, 1.1865654414577875e-07, 3.319365760034998e-08, 4.425692168297246e-08, 2.4921125714172376e-06, 3.541563131648218e-08, 4.725506030922588e-08, 2.7328065144160973e-08, 4.358576859431196e-07, 3.243177815193121e-08, 3.848571239473131e-08, 4.532952516456135e-06, 2.997496267198585e-06, 6.189019785551864e-08, 8.891507974340129e-08, 5.007128933698368e-08, 1.1465865554782795e-06, 1.5709920830886404e-07, 1.1946446498711794e-08, 9.162397873296868e-06, 1.2670290743699297e-05, 7.036714322339321e-08, 8.219678448995182e-08, 1.713107735668018e-06, 3.3631297924330283e-07, 2.3368124857370276e-07, 9.388178767721911e-08, 8.184085231732752e-07, 6.468824722105637e-05, 1.2088726464298816e-07, 7.923338785076339e-08, 2.7791091383733146e-07, 4.4684867361866054e-07, 6.40129110252019e-06, 5.478223030763729e-08, 1.3887637351217563e-06, 5.1703555072890595e-06, 1.4738415302417707e-05], "passage_tokens": ["To", "classify", "the", "computation", "time", "(", "or", "similar", "resources", ",", "such", "as", "space", "consumption", ")", ",", "one", "is", "interested", "in", "proving", "upper", "and", "lower", "bounds", "on", "the", "minimum", "amount", "of", "time", "required", "by", "the", "most", "efficient", "algorithm", "solving", "a", "given", "problem", ".", "The", "complexity", "of", "an", "algorithm", "is", "usually", "taken", "to", "be", "its", "worst", "-", "case", "complexity", ",", "unless", "specified", "otherwise", ".", "Analyzing", "a", "particular", "algorithm", "falls", "under", "the", "field", "of", "analysis", "of", "algorithms", ".", "To", "show", "an", "upper", "bound", "T(n", ")", "on", "the", "time", "complexity", "of", "a", "problem", ",", "one", "needs", "to", "show", "only", "that", "there", "is", "a", "particular", "algorithm", "with", "running", "time", "at", "most", "T(n", ")", ".", "However", ",", "proving", "lower", "bounds", "is", "much", "more", "difficult", ",", "since", "lower", "bounds", "make", "a", "statement", "about", "all", "possible", "algorithms", "that", "solve", "a", "given", "problem", ".", "The", "phrase", "\"", "all", "possible", "algorithms", "\"", "includes", "not", "just", "the", "algorithms", "known", "today", ",", "but", "any", "algorithm", "that", "might", "be", "discovered", "in", "the", "future", ".", "To", "show", "a", "lower", "bound", "of", "T(n", ")", "for", "a", "problem", "requires", "showing", "that", "no", "algorithm", "can", "have", "time", "complexity", "lower", "than", "T(n", ")", "."], "best_span": [33, 36], "best_span_char": [139, 206]}, "_id": "56e1bc3ae3433e1400423104", "context": "To classify the computation time (or similar resources, such as space consumption), one is interested in proving upper and lower bounds on the minimum amount of time required by the most efficient algorithm solving a given problem. The complexity of an algorithm is usually taken to be its worst-case complexity, unless specified otherwise. Analyzing a particular algorithm falls under the field of analysis of algorithms. To show an upper bound T(n) on the time complexity of a problem, one needs to show only that there is a particular algorithm with running time at most T(n). However, proving lower bounds is much more difficult, since lower bounds make a statement about all possible algorithms that solve a given problem. The phrase \"all possible algorithms\" includes not just the algorithms known today, but any algorithm that might be discovered in the future. To show a lower bound of T(n) for a problem requires showing that no algorithm can have time complexity lower than T(n).", "title": "Computational_complexity_theory", "machine_answer": {"answer_start": 139, "text": "the most efficient algorithm"}}