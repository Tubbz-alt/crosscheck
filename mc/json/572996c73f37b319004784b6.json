{"answers": [{"answer_start": 541, "text": "modular exponentiation"}, {"answer_start": 541, "text": "modular"}, {"answer_start": 541, "text": "modular"}, {"answer_start": 541, "text": "modular"}], "question": "On what type of exponentiation does the Diffie\u2013Hellman key exchange depend on?", "id": "572996c73f37b319004784b6", "prediction_results": {"best_span_str": "modular", "span_start_probs": [9.440124699722219e-07, 3.0616818094131304e-06, 6.4114002995552255e-09, 5.199942165745597e-08, 5.9599956330202986e-06, 9.30569740376086e-07, 2.464516923872395e-10, 6.977567967858533e-10, 7.010598768175669e-10, 8.025393682942195e-09, 2.3044539887440152e-10, 1.2475148025714589e-08, 1.1507648167707885e-08, 3.63092333977022e-10, 3.675640769529309e-08, 3.6432407313213844e-08, 3.134463710807722e-08, 5.253663726279001e-09, 1.0218383295068634e-07, 5.361546868698497e-07, 1.6611631963314721e-06, 4.9952905101235956e-05, 1.3789499462291133e-05, 1.3785206647298764e-06, 1.983884523326651e-08, 6.3090159763135034e-09, 7.384714617586496e-09, 1.2232106882947846e-08, 6.984373612795025e-06, 3.090414395501284e-07, 1.660048876139797e-09, 8.180220589792953e-08, 4.895617689015808e-09, 7.669252455322351e-10, 4.330599878699104e-08, 2.2605758931426578e-10, 2.0748278473092796e-07, 9.685501822787046e-08, 6.736139979146571e-10, 1.3684581467998669e-08, 4.477549997439212e-10, 3.736613685134671e-09, 2.7606162147919555e-11, 4.418345245227329e-09, 3.824801364515906e-09, 4.2789531917719614e-09, 5.01138188724326e-08, 6.609932370338356e-07, 5.230607484918437e-07, 6.233602078964395e-08, 3.5540614362616907e-07, 3.5355998306840775e-07, 1.126648427884902e-07, 1.8026992165687261e-06, 1.0114140280848005e-07, 8.012477792362915e-07, 6.534419867421093e-07, 6.065747459871318e-09, 1.1002437183549318e-08, 2.730195403088942e-09, 2.0512401022187987e-07, 1.3878128868327622e-07, 2.2038937341761766e-09, 4.233298511735484e-07, 3.612020123000548e-07, 3.190841937339428e-07, 2.445475729473401e-06, 1.2308349894851744e-09, 3.0637309578196437e-07, 3.239778223473877e-08, 8.004160463315202e-07, 2.353077288574923e-09, 1.1222913798292211e-07, 3.6409481651844544e-08, 2.3836124740661546e-10, 9.66649196243452e-08, 7.415819625045117e-10, 2.371846186122184e-08, 1.776138560671825e-07, 3.6423372762328654e-08, 4.19644458071744e-10, 4.0303947912434523e-07, 4.07648670375238e-08, 1.0766431159936474e-06, 1.3408372296908055e-06, 1.5537295894318959e-09, 4.943589715367125e-07, 2.1812653017150296e-07, 6.75380960046823e-08, 8.842954457577434e-08, 1.1864276672213236e-07, 1.8185253303215632e-09, 1.6162866600666348e-08, 9.168771697432021e-08, 4.460094260139158e-06, 1.403720034431899e-06, 9.336257988934449e-09, 1.8847515548259253e-06, 1.3517363868231769e-06, 1.4542246162818628e-06, 8.119527592498343e-06, 4.023380824946798e-06, 8.43216257635504e-05, 8.453732880298048e-05, 0.0001255470997421071, 0.001040064380504191, 9.749879245646298e-05, 0.0018403427675366402, 0.00025233300402760506, 0.0001927593257278204, 0.9961056113243103, 2.6321296900277957e-05, 7.539038620052452e-07, 4.6694046318407345e-07, 4.124438532926433e-07, 6.34290245216107e-07, 2.5445746132390923e-07, 1.2849407085013809e-06, 2.018945997406263e-05, 1.1586595292101265e-06, 1.5747012582778552e-08, 2.960427423204237e-07, 4.631385763786966e-08, 2.119303132985806e-08, 1.588454807688322e-07, 7.349249244725797e-07, 2.946764254829759e-08, 1.0434102648559929e-07, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [4.355852070148103e-06, 4.988934051652905e-06, 1.990870828194602e-07, 1.1448872783148545e-06, 5.9080117353005335e-05, 3.0639108445029706e-05, 1.5492088323298958e-07, 1.1732581128853781e-07, 7.34751068875994e-08, 2.5811789328145096e-07, 4.716509494073762e-08, 7.603887297591427e-08, 3.7877205727454566e-07, 1.1933013865927933e-07, 9.406114713783609e-07, 1.5861409963235928e-07, 2.650396481840289e-06, 1.2104689517400402e-07, 4.92658571715765e-08, 1.8369050280853116e-07, 1.3907481388741871e-07, 9.87992279988248e-07, 1.1186502888449468e-05, 4.4425323721952736e-05, 1.1471162508769339e-07, 1.9857019140090415e-07, 1.7859636614048213e-07, 6.111503125794115e-08, 1.0531932275625877e-05, 2.2375222670234507e-06, 3.618729493837236e-08, 1.9379170623778919e-07, 1.7502514992884244e-07, 3.404725035238698e-08, 2.690485416678712e-07, 1.4393267910861596e-08, 1.3827504972141469e-06, 8.056916840359918e-07, 3.246996271855096e-08, 1.1827216894744197e-07, 3.1203789774281177e-08, 1.3922291941526055e-07, 2.315867497770796e-08, 9.188519811687001e-07, 8.584792112742434e-07, 1.3076369214104488e-06, 1.0102515943799517e-06, 6.983354410294851e-07, 1.3855138547569368e-07, 4.646168605404455e-08, 5.351625631533352e-08, 4.197793828097929e-07, 5.0932108308643365e-08, 2.0923130250594113e-07, 4.523347385543275e-08, 1.85475812486402e-07, 6.495061370515032e-06, 4.335093706231419e-08, 1.3861826175798342e-07, 3.10139789405639e-08, 7.495342657648507e-08, 1.457600660614844e-06, 1.9303554381622234e-06, 1.4300755424301315e-07, 1.723635421058134e-07, 1.6754104592564545e-07, 1.754487016114581e-06, 2.9302794857244407e-08, 1.6426989759565913e-06, 5.2740450229293856e-08, 7.430737127833709e-07, 6.829487233517284e-07, 5.071972850601014e-07, 8.394919177590054e-07, 2.5228663602661072e-08, 2.3581480945722433e-06, 8.033112663952124e-08, 6.099985228047444e-08, 3.8965163184911944e-07, 9.307086656917818e-07, 2.7975165295401894e-08, 3.330314029881265e-06, 7.045724714771495e-08, 2.799305889311654e-07, 1.1928122148674447e-05, 2.0485874756559497e-06, 1.9458580879927467e-07, 1.1160128110532241e-07, 7.560400661077438e-08, 2.0943092238212557e-07, 1.2717712252197089e-06, 7.30097724499501e-08, 4.539979840956221e-07, 1.251311687155976e-06, 9.619329688348444e-08, 2.2410021927044e-07, 4.208157022844716e-08, 9.435745482733182e-07, 1.189651612776288e-07, 9.186557008433738e-07, 2.1727996113440895e-07, 9.471027340168803e-08, 2.3185471320630313e-07, 5.707154286938021e-07, 1.6638219335618487e-07, 2.0984207367291674e-06, 2.396196236986725e-07, 4.584922135109082e-05, 0.00036215042928233743, 1.2286831179153523e-06, 0.9039487242698669, 0.0941246971487999, 0.0010604409035295248, 9.050678272615187e-06, 2.5200830577887245e-07, 1.0168242852159892e-06, 2.4876101178961108e-06, 7.168321189965354e-07, 2.1859665139345452e-05, 0.00012663191591855139, 4.6385204655052803e-07, 3.814700903603807e-06, 2.3177334185220388e-07, 1.1995471993486717e-07, 3.29158893919157e-07, 1.5047020269776112e-06, 2.4689188649063e-05, 3.092288170591928e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["Several", "public", "-", "key", "cryptography", "algorithms", ",", "such", "as", "RSA", "and", "the", "Diffie", "\u2013", "Hellman", "key", "exchange", ",", "are", "based", "on", "large", "prime", "numbers", "(", "for", "example", ",", "512-bit", "primes", "are", "frequently", "used", "for", "RSA", "and", "1024-bit", "primes", "are", "typical", "for", "Diffie", "\u2013", "Hellman", ".", ")", ".", "RSA", "relies", "on", "the", "assumption", "that", "it", "is", "much", "easier", "(", "i.e.", ",", "more", "efficient", ")", "to", "perform", "the", "multiplication", "of", "two", "(", "large", ")", "numbers", "x", "and", "y", "than", "to", "calculate", "x", "and", "y", "(", "assumed", "coprime", ")", "if", "only", "the", "product", "xy", "is", "known", ".", "The", "Diffie", "\u2013", "Hellman", "key", "exchange", "relies", "on", "the", "fact", "that", "there", "are", "efficient", "algorithms", "for", "modular", "exponentiation", ",", "while", "the", "reverse", "operation", "the", "discrete", "logarithm", "is", "thought", "to", "be", "a", "hard", "problem", "."], "best_span": [110, 110], "best_span_char": [541, 548]}, "_id": "572996c73f37b319004784b6", "context": "Several public-key cryptography algorithms, such as RSA and the Diffie\u2013Hellman key exchange, are based on large prime numbers (for example, 512-bit primes are frequently used for RSA and 1024-bit primes are typical for Diffie\u2013Hellman.). RSA relies on the assumption that it is much easier (i.e., more efficient) to perform the multiplication of two (large) numbers x and y than to calculate x and y (assumed coprime) if only the product xy is known. The Diffie\u2013Hellman key exchange relies on the fact that there are efficient algorithms for modular exponentiation, while the reverse operation the discrete logarithm is thought to be a hard problem.", "title": "Prime_number", "machine_answer": {"answer_start": 541, "text": "modular"}}