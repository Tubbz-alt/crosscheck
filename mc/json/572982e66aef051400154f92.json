{"answers": [{"answer_start": 118, "text": "distributed computing"}, {"answer_start": 118, "text": "distributed computing"}, {"answer_start": 118, "text": "distributed"}, {"answer_start": 118, "text": "distributed computing"}, {"answer_start": 118, "text": "distributed computing"}], "question": "What is the name of one type of computing method that is used to find prime numbers?", "id": "572982e66aef051400154f92", "prediction_results": {"best_span_str": "Mersenne primes", "span_start_probs": [0.0009079304290935397, 0.00014634427498094738, 0.0007764377514831722, 9.14756819838658e-05, 0.00041972045437432826, 0.00041145479190163314, 0.0001240590790985152, 0.003309660591185093, 2.0088671135454206e-06, 3.689616278279573e-05, 6.526453216793016e-05, 0.00042872875928878784, 6.46517364657484e-05, 0.0014963260618969798, 8.711527698324062e-06, 0.00025165016995742917, 0.018658922985196114, 8.798640919849277e-05, 0.00012020090798614547, 0.001241695717908442, 0.01596173271536827, 0.20255541801452637, 0.007158104330301285, 0.0001526096893940121, 0.0003425697796046734, 0.00019752646039705724, 6.298074004007503e-05, 0.014871935360133648, 0.028351791203022003, 0.007892363704741001, 0.018016783520579338, 0.0009530186071060598, 0.00021110527450218797, 1.9366227206774056e-05, 3.987994205090217e-06, 5.4931730119278654e-05, 0.0005158540443517268, 0.0024956983979791403, 0.00012681781663559377, 3.992662095697597e-05, 1.1573169103940018e-05, 0.00012176588643342257, 9.965898789232597e-05, 0.00013649050379171968, 0.00013159617083147168, 8.362268090422731e-06, 3.7686972063966095e-05, 2.8153301173006184e-05, 0.00015801408153492957, 9.94777146843262e-05, 0.0005463315756060183, 0.0001359530579065904, 0.03414440527558327, 0.0655772015452385, 0.00272056320682168, 0.00012358956155367196, 3.1579988899466116e-06, 5.574524402618408e-05, 0.0005733174039050937, 1.587102269695606e-05, 6.403797669918276e-07, 0.0004976657219231129, 1.5027328117867e-05, 5.8949412959918845e-06, 0.0001679375855019316, 2.5749161522981012e-06, 1.4875117813062388e-05, 8.043065463425592e-06, 0.00010940796346403658, 1.5602361600031145e-05, 3.3728621929185465e-05, 9.586131000105524e-07, 0.00039477436803281307, 0.00010286174074281007, 0.00013057181786280125, 4.6760192162764724e-06, 4.1753526602406055e-05, 7.647141319466755e-05, 0.004755072295665741, 3.4732045605778694e-05, 0.0002978569536935538, 0.0009304254199378192, 0.0011592325754463673, 0.0001474770251661539, 3.5352655686438084e-05, 0.00012209321721456945, 0.00011993685620836914, 0.002134604612365365, 0.0002713024732656777, 0.0002117702824762091, 0.0006822667783126235, 0.00040084379725158215, 0.0004942849627695978, 0.0003292262845207006, 0.06916029751300812, 0.010108224116265774, 0.022527046501636505, 0.00020957173546776175, 0.0003257269272580743, 0.00043946411460638046, 0.00042328922427259386, 0.23328524827957153, 0.0037475822027772665, 1.7094153008656576e-05, 6.286276766331866e-05, 8.389930371777155e-06, 2.8538075639517047e-05, 7.584621198475361e-05, 0.0006830147467553616, 0.000952751433942467, 0.0007366204517893493, 1.165135563496733e-05, 0.030994996428489685, 0.00020141078857704997, 0.004624650813639164, 0.026387237012386322, 0.0003371256170794368, 1.0555082553764805e-05, 0.0006796693778596818, 0.0002574236423242837, 2.2972490114625543e-05, 0.00040595827158540487, 0.0005551510257646441, 0.003908356186002493, 3.662632661871612e-05, 0.0016459698090329766, 0.0003004001046065241, 0.0004701987199950963, 0.031487420201301575, 5.048800812801346e-05, 0.0015195499872788787, 0.0159979946911335, 0.010762277990579605, 0.00032134132925421, 1.012781558529241e-05, 4.310876101953909e-05, 0.0028270366601645947, 0.00028299755649641156, 0.001718857791274786, 0.0031518072355538607, 0.00011743079085135832, 0.0002270824188599363, 0.00022300987620837986, 0.00010854028369067237, 0.004495194647461176, 2.7788923034677282e-05, 3.0415612854994833e-05, 5.884729944227729e-06, 0.004175544250756502, 0.00025469085085205734, 0.00013293081428855658, 4.052846270496957e-05, 0.05419982969760895, 0.006173205561935902, 0.00013870168186258525, 0.0007207819144241512, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [3.2599695259705186e-05, 1.1623706086538732e-06, 0.00036713798181153834, 3.5070106605417095e-06, 2.135646582246409e-06, 2.9852859370294027e-05, 6.0458501138782594e-06, 0.0012777223018929362, 9.917822580973734e-07, 3.0604505809606053e-06, 2.446471080475021e-05, 0.0038823550567030907, 0.00043909813393838704, 4.9973136810876895e-06, 7.893585234342027e-07, 1.7862400909507414e-06, 0.0040238844230771065, 2.5069116418308113e-06, 3.215112428733846e-06, 7.94174866314279e-06, 4.545532283373177e-05, 0.24440787732601166, 0.15198107063770294, 0.006050866097211838, 9.551666835250217e-07, 6.513956759590656e-05, 2.5035835733433487e-06, 5.653422704199329e-06, 0.0002760068164207041, 0.006086598616093397, 0.0019997074268758297, 0.0021071445662528276, 0.009460436180233955, 0.0013069752603769302, 5.721574325434631e-06, 1.23654735944001e-05, 5.740441338275559e-06, 4.7654037189204246e-05, 0.00019946304382756352, 0.0014522008132189512, 2.7705855245585553e-06, 2.1327512513380498e-05, 5.559591591008939e-05, 2.931953076767968e-06, 0.000139582363772206, 4.5897741074441e-06, 1.486849328102835e-06, 3.137197836622363e-06, 4.8875881475396454e-06, 1.8209868358098902e-05, 0.0039305659011006355, 0.0006805818993598223, 1.3668143765244167e-05, 0.0004902833024971187, 0.004863554146140814, 0.08635453134775162, 3.4793953091138974e-05, 3.725908982232795e-06, 5.468465133162681e-06, 0.00022761034779250622, 1.1193172895218595e-06, 2.149209194612922e-06, 0.00012223515659570694, 7.194769295892911e-07, 0.0001287575432797894, 1.3763624338025693e-06, 5.82139136895421e-07, 1.6923250996114803e-06, 4.390771664475324e-06, 7.346233815042069e-06, 0.00013648626918438822, 7.232226835185429e-07, 2.1619914605253143e-06, 1.658084147493355e-05, 0.0010088894050568342, 1.2436931683623698e-05, 0.00011213501420570537, 0.0001886793179437518, 3.1126326121011516e-06, 3.9683754948782735e-07, 6.707297757202468e-07, 1.0134477633982897e-05, 0.00040096708107739687, 6.092618150432827e-06, 2.139255593647249e-05, 1.6746217852414702e-06, 1.4473362170974724e-06, 1.785646418284159e-05, 1.4034064406587277e-05, 0.00107231002766639, 1.7558297258801758e-05, 4.134665232413681e-06, 3.722966357599944e-05, 5.08880566485459e-06, 0.00011037520744139329, 0.00032905800617299974, 0.059139396995306015, 0.0001234836963703856, 8.611664270574693e-06, 1.6788767425168771e-06, 2.0979975943191675e-06, 0.0014401414664462209, 0.23875856399536133, 0.017242245376110077, 2.9662621727766236e-06, 1.5438522495969664e-06, 3.91488938475959e-05, 1.9454871562629705e-06, 2.1784976524941158e-06, 1.5378113857877906e-06, 5.698349468730157e-06, 7.60455577619723e-07, 4.022432040073909e-05, 8.582132977608126e-06, 0.0060323309153318405, 0.00774981826543808, 0.03191569820046425, 9.36943688429892e-05, 3.715117782121524e-05, 4.827910288440762e-06, 7.762458835713915e-07, 1.6056893628046964e-06, 6.154220955068013e-06, 0.004513692110776901, 7.367278158199042e-05, 5.1723280193982646e-05, 1.2372634046187159e-05, 3.1021004360809457e-06, 0.01514147687703371, 3.052236934308894e-06, 6.223018317541573e-06, 0.0003171800053678453, 0.00017070946341846138, 0.0470210425555706, 0.0003843883750960231, 5.157322448212653e-06, 0.00015461657312698662, 2.8703643693006597e-06, 4.724881819129223e-06, 0.0035386094823479652, 2.604770088510122e-06, 2.5795081910473527e-06, 0.0005248887464404106, 2.2619642550125718e-05, 9.538409358356148e-05, 3.335791188874282e-05, 2.5944431399693713e-05, 5.90014587942278e-06, 0.00020889667212031782, 2.2126594558358192e-05, 5.709149991162121e-05, 6.45990003249608e-05, 0.003872246015816927, 0.024570830166339874, 1.6919644622248597e-05, 0.00011037204967578873, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["The", "following", "table", "gives", "the", "largest", "known", "primes", "of", "the", "mentioned", "types", ".", "Some", "of", "these", "primes", "have", "been", "found", "using", "distributed", "computing", ".", "In", "2009", ",", "the", "Great", "Internet", "Mersenne", "Prime", "Search", "project", "was", "awarded", "a", "US$", "100,000", "prize", "for", "first", "discovering", "a", "prime", "with", "at", "least", "10", "million", "digits", ".", "The", "Electronic", "Frontier", "Foundation", "also", "offers", "$", "150,000", "and", "$", "250,000", "for", "primes", "with", "at", "least", "100", "million", "digits", "and", "1", "billion", "digits", ",", "respectively", ".", "Some", "of", "the", "largest", "primes", "not", "known", "to", "have", "any", "particular", "form", "(", "that", "is", ",", "no", "simple", "formula", "such", "as", "that", "of", "Mersenne", "primes", ")", "have", "been", "found", "by", "taking", "a", "piece", "of", "semi", "-", "random", "binary", "data", ",", "converting", "it", "to", "a", "number", "n", ",", "multiplying", "it", "by", "256k", "for", "some", "positive", "integer", "k", ",", "and", "searching", "for", "possible", "primes", "within", "the", "interval", "[", "256kn", "+", "1", ",", "256k(n", "+", "1", ")", "\u2212", "1].[citation", "needed", "]"], "best_span": [101, 102], "best_span_char": [169, 372]}, "_id": "572982e66aef051400154f92", "context": "The following table gives the largest known primes of the mentioned types. Some of these primes have been found using distributed computing. In 2009, the Great Internet Mersenne Prime Search project was awarded a US$100,000 prize for first discovering a prime with at least 10 million digits. The Electronic Frontier Foundation also offers $150,000 and $250,000 for primes with at least 100 million digits and 1 billion digits, respectively. Some of the largest primes not known to have any particular form (that is, no simple formula such as that of Mersenne primes) have been found by taking a piece of semi-random binary data, converting it to a number n, multiplying it by 256k for some positive integer k, and searching for possible primes within the interval [256kn + 1, 256k(n + 1) \u2212 1].[citation needed]", "title": "Prime_number", "machine_answer": {"answer_start": 169, "text": "Mersenne primes"}}