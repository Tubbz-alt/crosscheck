{"answers": [{"answer_start": 65, "text": "two main classes"}, {"answer_start": 65, "text": "two"}, {"answer_start": 65, "text": "two"}, {"answer_start": 65, "text": "two"}, {"answer_start": 65, "text": "two"}], "question": "How many modern types of primality tests for general numbers n are there? ", "id": "57297d421d046914007794e5", "prediction_results": {"best_span_str": "two", "span_start_probs": [0.010552064515650272, 0.0002595414989627898, 5.01569447806105e-05, 3.9837483200244606e-05, 0.00033684750087559223, 6.686562119284645e-05, 8.595505642006174e-05, 0.00020113965729251504, 0.00011547263420652598, 0.004587265662848949, 0.0060288067907094955, 0.9731156229972839, 0.0004958562785759568, 0.0003666900156531483, 1.215665542986244e-05, 0.0026744806673377752, 8.831696504785214e-06, 4.371325701413298e-07, 7.924931196612306e-06, 2.407442661933601e-05, 3.425810746193747e-06, 2.5865169845928904e-06, 1.1509256410136004e-06, 1.1535066732903942e-06, 0.00020645520999096334, 1.0042931535281241e-05, 5.549741672439268e-06, 8.111662464216352e-05, 1.4425230574488523e-06, 2.3483537461288506e-06, 1.60700699325389e-06, 1.5610161199219874e-06, 3.6026261795996106e-07, 8.917894547266769e-07, 2.8779942340406706e-07, 1.0123075071533094e-06, 1.0209762422164204e-06, 1.2326156593189808e-06, 1.9378805973246926e-06, 3.4180632155766943e-06, 3.85969428862154e-07, 1.500596226833295e-06, 3.0438073395089305e-08, 2.015380687225843e-06, 5.753187792834069e-07, 7.088933216436999e-06, 1.6803689106836828e-07, 2.9993852734833126e-08, 1.2831631011067657e-06, 6.755210790743149e-08, 1.2761137213601614e-07, 1.236588332176325e-06, 5.6495478020224255e-06, 3.376307518010435e-07, 9.788139720967592e-08, 3.3745255478834224e-08, 9.312340125688934e-07, 3.407785982290079e-07, 1.1908058183962567e-07, 2.200415494257868e-08, 2.4988705717987614e-06, 3.919645621408563e-07, 1.2008546264041797e-06, 1.6032811345212394e-06, 1.847691464718082e-06, 3.1420699997397605e-06, 2.7348598905518884e-06, 1.1190015811735066e-06, 1.4026218195795082e-06, 2.1801874083848816e-08, 1.8580924461275572e-06, 7.123862360458588e-06, 3.7642003007931635e-06, 5.585553140008415e-07, 7.473971891158726e-06, 6.647509280810482e-07, 4.055427052662708e-05, 2.5700171590870013e-07, 9.784648113964067e-08, 5.239733127382351e-06, 2.962005510198651e-06, 3.27627773799577e-08, 3.6049769391865993e-07, 1.953808123289491e-06, 5.404469902714482e-07, 4.348473510162876e-07, 2.425373111236695e-07, 4.269642062126877e-08, 1.942465814863681e-06, 3.429370281082811e-06, 8.384175487208267e-08, 7.265999215633201e-07, 3.3247928854507336e-07, 7.409217505482957e-05, 9.415666681888979e-06, 1.615613109606784e-05, 1.60522563419363e-06, 1.0670232768461574e-05, 3.514873014864861e-06, 6.043609118933091e-06, 1.8215670934296213e-05, 1.4664963146060472e-06, 2.401701294729719e-06, 2.0126273739151657e-05, 8.141644684656058e-06, 1.6173389667528681e-06, 1.7518951835882035e-06, 1.1938032912439667e-05, 7.904803851488396e-07, 4.963508786204329e-07, 7.234446002257755e-06, 1.2843996728406637e-06, 7.223398483802157e-07, 3.327457420709834e-07, 1.3002675132156583e-06, 1.0017157592301373e-06, 2.5197005015797913e-07, 4.3110716774208413e-07, 1.099976543628145e-06, 8.079259714577347e-07, 1.417884476495601e-07, 7.419214966830623e-07, 1.0563913974692696e-06, 1.25231792935665e-06, 5.2385537685495365e-08, 1.2538894225144759e-06, 9.401489478477743e-06, 2.1553385067818454e-06, 9.353898917652259e-07, 2.9426403216348263e-06, 3.7562767829513177e-07, 5.714303483728145e-07, 5.218302590037638e-07, 6.515582384736263e-08, 6.613887535422691e-07, 4.674594947573496e-06, 3.355172566443798e-06, 6.377490535669494e-07, 9.131600563705433e-06, 8.235969630732143e-07, 7.43062230412761e-07, 4.19255997030632e-07, 4.135117421810719e-07, 2.710164324071229e-07, 3.032543531844567e-07, 2.1184328957701837e-08, 1.8170032944908598e-06, 8.530950026397477e-07, 7.276901214936515e-07, 8.112872507126667e-08, 1.7547628203828936e-06, 7.344956429733429e-07, 1.6704796053090831e-06, 6.393067337739922e-07, 1.9334735043230467e-05, 8.133805749821477e-06, 4.298086935250467e-07, 1.8433698642184027e-05, 2.8416829422894807e-07, 9.571036935085431e-05, 6.706455337734951e-07, 2.609813236631453e-06, 3.207739791832864e-05, 6.357060556183569e-06, 1.8715585383688449e-06, 5.989324563415721e-06, 3.754427098101587e-06, 3.315719609986445e-08, 5.305460035742726e-07, 7.802697865599839e-08, 2.459559027556679e-06, 1.0758348025774467e-06, 1.8332697493406158e-07, 1.0367956093659814e-07, 5.198622829993838e-07, 1.0481595609235228e-06, 1.8677278035283962e-07, 1.232482873092522e-06, 6.188849397403828e-07, 1.4136745107862225e-07, 2.7090379717265023e-07, 5.348943545868678e-07, 2.894573185585614e-07, 1.0740678391130132e-07, 3.964069605899567e-08, 1.7744216620485531e-06, 2.9739303499809466e-06, 8.188216270355042e-06, 2.0695283353688865e-07, 2.2005920072842855e-06, 3.660961169771326e-07, 1.5480087540709064e-06, 7.99913735249902e-08, 3.705378404106341e-08, 3.962701100590493e-08, 3.72968500528259e-08, 1.8448039327267907e-06, 1.3053497127657465e-07, 3.0066237854953215e-07, 1.073367528192648e-07, 7.381122202332335e-08, 1.9320843591685843e-08, 1.1549717555681127e-06, 4.409771463542711e-07, 1.7592239487385086e-07, 7.45706927318679e-08, 2.882893795685959e-06, 4.698349130194401e-06, 2.6238495820507524e-07, 2.9641234505106695e-05, 4.362943855085177e-06], "span_end_probs": [0.0004896496539004147, 3.914993430953473e-05, 0.00018396522500552237, 2.789105337797082e-06, 7.468532658094773e-06, 4.807269215234555e-05, 0.0002624264743644744, 1.5767058130222722e-06, 8.558559784432873e-06, 0.00011807979899458587, 1.3030384252488147e-05, 0.7470803260803223, 0.009957479313015938, 0.23221419751644135, 0.0008878365624696016, 0.0009182594367302954, 6.036676950316178e-06, 4.16196598962415e-06, 3.269823719165288e-05, 7.349505267484346e-06, 0.0001438752660760656, 9.416072862222791e-05, 0.00020551613124553114, 3.2993198146868963e-06, 2.263196074636653e-05, 0.005175927188247442, 0.0007313633686862886, 4.880856522504473e-06, 2.846526331268251e-05, 7.328958417929243e-07, 6.298321295616915e-07, 1.4288119700722746e-06, 2.705943700220814e-07, 1.9750236788240727e-06, 2.110313346292969e-07, 7.722415489297418e-07, 6.885911147946899e-07, 4.776085233970662e-07, 1.0502805025680573e-06, 1.0912231118709315e-05, 4.5270158466337307e-07, 1.9384494862606516e-06, 1.387704315902738e-07, 6.269144068937749e-05, 7.577276846859604e-05, 9.51383697156416e-07, 1.2515737353169243e-06, 2.529341998069867e-07, 7.802424306646571e-07, 1.3916836678617983e-06, 1.779229137355287e-07, 2.5706538053782424e-07, 1.827940081966517e-06, 2.9761155019514263e-05, 1.2214155731271603e-06, 4.679247638250672e-07, 9.526911526336335e-07, 3.015113350102183e-07, 1.5674525002395967e-06, 5.967437459730718e-07, 3.7384563711384544e-07, 2.68777853307256e-07, 8.239061912718171e-07, 5.446819386634161e-07, 3.927925149582734e-07, 6.936563750059577e-07, 2.608338400023058e-05, 3.803113202138775e-07, 1.568955667607952e-06, 9.54547729747901e-08, 1.671633498290248e-07, 2.916213588832761e-06, 2.200495873694308e-05, 2.7761774390455685e-07, 3.114421269856393e-05, 3.460004518274218e-05, 3.510654096317012e-06, 5.193054221308557e-06, 1.2272238336663577e-07, 3.832454922303441e-07, 3.613832450355403e-05, 2.1330877189029707e-06, 3.629526474924205e-07, 2.2233599850096653e-07, 3.969105364376446e-07, 3.7878777447986067e-07, 6.185212555465114e-07, 1.2438979979378928e-07, 4.367444716990576e-07, 4.310172244004207e-06, 1.7460027379456733e-07, 1.5065514162415639e-05, 1.2557588888739701e-05, 8.717616424291919e-07, 3.4131924167013494e-06, 2.476466988809989e-06, 2.080758605416122e-07, 1.208757112181047e-06, 3.1695239499640593e-07, 6.534426120197168e-07, 2.1382640625233762e-05, 3.623474356118095e-07, 4.3691736095752276e-07, 1.6626831893518101e-06, 1.2936295206600334e-05, 8.34428719826974e-05, 3.559254400897771e-05, 9.35967705117946e-07, 2.4900914468162227e-06, 3.712449938575446e-07, 3.1212360340759915e-07, 3.474069671938196e-07, 9.140036354438053e-07, 3.1723089932711446e-07, 6.217474037839565e-07, 8.269257705251221e-07, 2.6195186819677474e-07, 1.7438136410419247e-06, 9.596130894351518e-07, 1.431485088687623e-06, 1.4669201675587829e-07, 2.8012860298076703e-07, 6.915572043908469e-07, 5.2029616199433804e-05, 1.8841675455405493e-06, 7.120535201465827e-07, 4.93228355935571e-07, 3.076330585827236e-06, 2.5320477448076417e-07, 7.001369226600218e-07, 2.775813754851697e-06, 6.433216981349688e-07, 4.160555135968025e-07, 9.986531068761906e-08, 1.3720524805194145e-07, 1.0514631867408752e-06, 9.39357778406702e-05, 3.1903884519124404e-05, 5.90594652294385e-07, 4.69288238491572e-07, 5.836104719492141e-07, 3.307345082248503e-07, 6.494497029052582e-07, 1.1209001513634576e-06, 2.212187382610864e-06, 1.3715187208163115e-07, 4.729260467684071e-07, 7.230922278722574e-07, 3.760322215384804e-05, 3.994641247118125e-06, 4.482628241930797e-07, 2.5397940817128983e-07, 1.5880419823588454e-06, 2.498658773220086e-07, 1.060130330188258e-06, 7.309835837077117e-06, 4.1505245462758467e-07, 2.095841637128615e-06, 1.354653562657404e-07, 0.0003014629182871431, 3.887478214892326e-06, 5.289458613333409e-07, 2.50474863605632e-06, 3.776424136958667e-06, 4.413502097122546e-07, 7.617212531840778e-07, 3.5988596209790558e-06, 1.3012216015795275e-07, 3.7983649235684425e-05, 2.239728701169952e-06, 3.2717417752792244e-07, 4.506760831191059e-07, 1.9550870433704404e-07, 2.007897279554527e-07, 1.870959209782086e-07, 5.480929416989966e-07, 2.318758163255552e-07, 5.450758635561215e-07, 3.685862793645356e-06, 1.5497917615903134e-07, 2.1447789322337485e-07, 4.042925638714223e-07, 3.0688394758726645e-07, 9.437622452423966e-07, 2.9045729661447695e-06, 2.0465057559704292e-07, 3.9276480379157874e-07, 4.19776233684388e-06, 2.1160852270440955e-07, 2.885832145693712e-05, 2.841692912625149e-05, 2.105532814766775e-07, 1.7569718124832434e-07, 1.524573320921263e-07, 1.2660055972446571e-06, 6.714286087117216e-07, 4.4705763002639287e-07, 2.3645051783205417e-07, 5.157909299668972e-07, 4.6295775746330037e-07, 8.190075959646492e-07, 4.5945532178848225e-07, 2.8099950100113347e-07, 3.078462782468705e-07, 3.7754605841655575e-07, 1.61051133318324e-07, 4.476105175399425e-07, 4.726039151137229e-06, 2.7721193873730954e-07, 3.673205810628133e-06, 2.3373524527414702e-05], "passage_tokens": ["Modern", "primality", "tests", "for", "general", "numbers", "n", "can", "be", "divided", "into", "two", "main", "classes", ",", "probabilistic", "(", "or", "\"", "Monte", "Carlo", "\"", ")", "and", "deterministic", "algorithms", ".", "Deterministic", "algorithms", "provide", "a", "way", "to", "tell", "for", "sure", "whether", "a", "given", "number", "is", "prime", "or", "not", ".", "For", "example", ",", "trial", "division", "is", "a", "deterministic", "algorithm", "because", ",", "if", "performed", "correctly", ",", "it", "will", "always", "identify", "a", "prime", "number", "as", "prime", "and", "a", "composite", "number", "as", "composite", ".", "Probabilistic", "algorithms", "are", "normally", "faster", ",", "but", "do", "not", "completely", "prove", "that", "a", "number", "is", "prime", ".", "These", "tests", "rely", "on", "testing", "a", "given", "number", "in", "a", "partly", "random", "way", ".", "For", "example", ",", "a", "given", "test", "might", "pass", "all", "the", "time", "if", "applied", "to", "a", "prime", "number", ",", "but", "pass", "only", "with", "probability", "p", "if", "applied", "to", "a", "composite", "number", ".", "If", "we", "repeat", "the", "test", "n", "times", "and", "pass", "every", "time", ",", "then", "the", "probability", "that", "our", "number", "is", "composite", "is", "1/(1-p)n", ",", "which", "decreases", "exponentially", "with", "the", "number", "of", "tests", ",", "so", "we", "can", "be", "as", "sure", "as", "we", "like", "(", "though", "never", "perfectly", "sure", ")", "that", "the", "number", "is", "prime", ".", "On", "the", "other", "hand", ",", "if", "the", "test", "ever", "fails", ",", "then", "we", "know", "that", "the", "number", "is", "composite", "."], "best_span": [11, 11], "best_span_char": [65, 68]}, "_id": "57297d421d046914007794e5", "context": "Modern primality tests for general numbers n can be divided into two main classes, probabilistic (or \"Monte Carlo\") and deterministic algorithms. Deterministic algorithms provide a way to tell for sure whether a given number is prime or not. For example, trial division is a deterministic algorithm because, if performed correctly, it will always identify a prime number as prime and a composite number as composite. Probabilistic algorithms are normally faster, but do not completely prove that a number is prime. These tests rely on testing a given number in a partly random way. For example, a given test might pass all the time if applied to a prime number, but pass only with probability p if applied to a composite number. If we repeat the test n times and pass every time, then the probability that our number is composite is 1/(1-p)n, which decreases exponentially with the number of tests, so we can be as sure as we like (though never perfectly sure) that the number is prime. On the other hand, if the test ever fails, then we know that the number is composite.", "title": "Prime_number", "machine_answer": {"answer_start": 65, "text": "two"}}