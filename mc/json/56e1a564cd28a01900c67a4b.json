{"answers": [{"answer_start": 183, "text": "T(n)"}, {"answer_start": 183, "text": "T(n)"}, {"answer_start": 183, "text": "T(n)"}], "question": "How is worst-case time complexity written as an expression?", "id": "56e1a564cd28a01900c67a4b", "prediction_results": {"best_span_str": "a polynomial in n, then the algorithm is said to be a polynomial time algorithm", "span_start_probs": [0.11212994903326035, 0.012167930603027344, 0.02492661401629448, 0.0005955253727734089, 0.00021974171977490187, 0.00984533317387104, 5.250913818599656e-05, 0.0021154575515538454, 0.0006358719547279179, 0.0001444081135559827, 0.00036126020131632686, 8.058425737544894e-05, 0.0016691841883584857, 0.0005170354270376265, 0.002752940636128187, 0.0018272175220772624, 2.910510556830559e-05, 0.005636987276375294, 0.00812111422419548, 0.0038549804594367743, 0.0014528833562508225, 0.0026408883277326822, 0.0024132654070854187, 0.014204403385519981, 0.0007347941282205284, 2.1902387743466534e-05, 0.0003452374949119985, 0.0007271909853443503, 0.00015510707453358918, 0.0005369674181565642, 0.00015223123773466796, 0.013238628394901752, 0.0001647093304200098, 0.013554256409406662, 0.001899909577332437, 6.61235571897123e-06, 0.00020987696188967675, 0.0007886326056905091, 0.0004702736041508615, 0.001493987743742764, 0.002182501135393977, 0.028344210237264633, 0.020380616188049316, 0.09805022180080414, 0.01996481604874134, 0.061169229447841644, 0.03725507855415344, 0.002170766470953822, 0.002159608993679285, 0.0009269342408515513, 0.0007811917457729578, 0.0005096708773635328, 3.399906199774705e-05, 0.0015364022692665458, 0.0008513383218087256, 0.002117471769452095, 0.0004176408110652119, 0.0006047426140867174, 0.07068909704685211, 0.20746992528438568, 0.10737233608961105, 0.0012167181121185422, 0.003568439045920968, 0.00013706294703297317, 0.01851728931069374, 0.0121583491563797, 0.0074037364684045315, 0.0004664145817514509, 0.003927370999008417, 0.004960034973919392, 0.0006830379134044051, 0.011789693497121334, 0.019991062581539154, 0.00018419753178022802, 0.0002076243981719017, 4.7364366764668375e-05, 0.0010532389860600233, 6.817311714257812e-06, 9.552698611514643e-05, 8.893421909306198e-05, 0.00016007617523428053, 0.00036287360126152635, 3.976701555075124e-05, 4.523562893155031e-05, 1.0642240340530407e-05, 0.0001555528724566102, 6.580822810065001e-05, 0.00010885444498853758, 7.614611968165264e-05, 1.993438127101399e-05, 1.3713413409277564e-06, 2.3554615836474113e-05, 0.00011956672096857801, 0.00012325329589657485, 0.00016608326404821128, 0.001914715045131743, 0.0020795732270926237, 3.475262565189041e-05, 6.752235640306026e-05, 3.856925468426198e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [7.207183807622641e-05, 1.2169687579444144e-05, 0.00011371818982297555, 0.003651465754956007, 0.000705618062056601, 0.06495580822229385, 0.002687001833692193, 8.792620792519301e-05, 0.00028261850820854306, 0.000615642115008086, 4.63586638943525e-06, 3.7307759157556575e-06, 0.0006757447845302522, 6.576916348421946e-06, 5.926424364588456e-06, 0.0001627670571906492, 8.265728865808342e-06, 0.018102701753377914, 0.0002443024714011699, 2.047050293185748e-05, 3.204561653546989e-05, 8.227150101447478e-05, 7.100154562067473e-06, 2.862224937416613e-05, 0.00028173989267088473, 6.69989731250098e-06, 1.290526688535465e-05, 1.7401562217855826e-05, 0.007491106167435646, 2.36998876061989e-05, 4.526782504399307e-05, 0.06531140953302383, 0.0014510106993839145, 3.3260796044487506e-05, 6.50872680125758e-05, 6.983743219279859e-07, 6.556504376931116e-05, 9.445675459573977e-06, 3.942753392038867e-05, 0.00218239426612854, 0.0005887397564947605, 2.2095221083873184e-06, 0.0008509369799867272, 3.86469837394543e-05, 2.3700860765529796e-05, 7.983059185789898e-05, 0.0006343320128507912, 0.0021077359560877085, 0.0052936021238565445, 8.865503332344815e-05, 0.0001112898753490299, 0.0024017237592488527, 3.423991802264936e-05, 0.0008569094934500754, 0.007118298672139645, 0.0004161638207733631, 0.054692499339580536, 0.026875145733356476, 6.980504167586332e-06, 3.33963253069669e-05, 0.03129856660962105, 0.000380636629415676, 0.2938559949398041, 0.01728042960166931, 0.00013551380834542215, 2.9824683224433102e-05, 0.013183497823774815, 8.130998321576044e-05, 0.0004395105061121285, 2.756176036200486e-05, 2.3037893697619438e-05, 0.00010219475370831788, 0.00234059221111238, 0.0006771175540052354, 0.2987649738788605, 0.06358297169208527, 0.00036505964817479253, 3.1609721190761775e-05, 9.650902211433277e-05, 2.2641976102022454e-05, 1.144882162407157e-06, 5.654178494296502e-07, 1.9780687580350786e-05, 3.436258282363269e-07, 3.4784983427016414e-07, 5.0956103223143145e-05, 7.54741108721646e-07, 4.6946547627157997e-07, 8.51053755468456e-06, 2.198080665039015e-06, 5.194725076762552e-07, 0.00024239699996542186, 2.070308255497366e-06, 1.0609048786136555e-06, 3.915655724995304e-06, 3.4980778309545713e-06, 0.00020110554760321975, 5.607674393104389e-05, 0.0032633470837026834, 0.0015600303886458278, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["If", "the", "input", "size", "is", "n", ",", "the", "time", "taken", "can", "be", "expressed", "as", "a", "function", "of", "n.", "Since", "the", "time", "taken", "on", "different", "inputs", "of", "the", "same", "size", "can", "be", "different", ",", "the", "worst", "-", "case", "time", "complexity", "T(n", ")", "is", "defined", "to", "be", "the", "maximum", "time", "taken", "over", "all", "inputs", "of", "size", "n.", "If", "T(n", ")", "is", "a", "polynomial", "in", "n", ",", "then", "the", "algorithm", "is", "said", "to", "be", "a", "polynomial", "time", "algorithm", ".", "Cobham", "'s", "thesis", "says", "that", "a", "problem", "can", "be", "solved", "with", "a", "feasible", "amount", "of", "resources", "if", "it", "admits", "a", "polynomial", "time", "algorithm", "."], "best_span": [59, 74], "best_span_char": [34, 303]}, "_id": "56e1a564cd28a01900c67a4b", "context": "If the input size is n, the time taken can be expressed as a function of n. Since the time taken on different inputs of the same size can be different, the worst-case time complexity T(n) is defined to be the maximum time taken over all inputs of size n. If T(n) is a polynomial in n, then the algorithm is said to be a polynomial time algorithm. Cobham's thesis says that a problem can be solved with a feasible amount of resources if it admits a polynomial time algorithm.", "title": "Computational_complexity_theory", "machine_answer": {"answer_start": 34, "text": "a polynomial in n, then the algorithm is said to be a polynomial time algorithm"}}