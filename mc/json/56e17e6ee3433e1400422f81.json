{"answers": [{"answer_start": 520, "text": "computational problems"}, {"answer_start": 520, "text": "computational problems"}, {"answer_start": 520, "text": "computational problems"}], "question": "What does computational complexity theory most specifically seek to answer? ", "id": "56e17e6ee3433e1400422f81", "prediction_results": {"best_span_str": "computational problems", "span_start_probs": [4.339828956290148e-05, 3.822558937827125e-05, 1.6841770047903992e-05, 5.458729901874904e-06, 1.0966330592054874e-05, 1.5177901104834746e-06, 1.0099594874191098e-05, 1.455075471312739e-05, 1.2506183111327118e-07, 7.306572570087155e-06, 3.168781177009805e-06, 3.440148702793522e-06, 5.5054555559763685e-05, 6.145002407720312e-05, 7.545042899437249e-05, 3.792786446865648e-05, 2.1129358174221125e-06, 9.211159340338781e-05, 0.00023632569354958832, 1.922777846630197e-05, 1.0616081453918014e-06, 1.076257376553258e-05, 7.203747372841462e-05, 3.8499645597767085e-05, 1.1126137906103395e-05, 2.909823251684429e-06, 8.462998812319711e-05, 2.3125654479372315e-05, 6.0683355513901915e-06, 4.955591066391207e-06, 8.208350976701695e-08, 9.418163244845346e-07, 2.9458676635840675e-06, 5.928939117438858e-06, 1.8736978745437227e-05, 1.5658319171052426e-05, 4.504390744841658e-06, 1.786925167834852e-05, 3.747551602373278e-07, 1.40734227898065e-05, 5.710293862648541e-06, 1.2861708455602638e-05, 7.053231820464134e-05, 1.860005249909591e-05, 3.103864946751855e-05, 0.0014593795640394092, 0.0006891540251672268, 9.989258251152933e-05, 6.466610648203641e-05, 0.0002292135905008763, 0.0005880791577510536, 0.0002522314025554806, 0.0005041317199356854, 0.0007876505260355771, 0.00018439639825373888, 0.013083182275295258, 0.0011671817628666759, 0.00015723795513622463, 0.007299201097339392, 9.916173439705744e-05, 0.0008450776804238558, 1.621480805624742e-05, 0.0005380482180044055, 0.0010473142610862851, 1.7204434698214754e-05, 0.00024264214152935892, 0.0006472443928942084, 0.003957777284085751, 0.0016076845349743962, 0.022657284513115883, 0.010854207910597324, 0.0004043751978315413, 0.0001075559266610071, 0.00042861103429459035, 9.695254993857816e-05, 7.56752297093044e-06, 2.823280738084577e-05, 5.270962356007658e-05, 0.0009261132217943668, 0.00021202574134804308, 1.6055009837145917e-05, 2.1071435185149312e-05, 0.00019000824249815196, 0.00018459802959114313, 6.811796629335731e-05, 3.448079587542452e-05, 0.00032593199284747243, 0.00012016492109978572, 0.0003209346323274076, 0.0001275127287954092, 0.06657612323760986, 0.0012731350725516677, 0.1754760593175888, 0.5014548897743225, 0.01880965568125248, 0.0012357234954833984, 0.08929586410522461, 0.03583848848938942, 0.03035319223999977, 0.005199609789997339, 0.0005089867627248168, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [2.529851371946279e-06, 2.1646396817232016e-06, 3.069141484957072e-06, 1.1876074950123439e-06, 1.3846066394762602e-05, 1.0166614856643719e-06, 6.550039870489854e-07, 0.0001952086022356525, 1.3291924005898181e-06, 6.229300311133557e-07, 4.1250550566473976e-05, 4.636701305571478e-06, 6.881923582113814e-07, 7.321006023630616e-07, 1.293283048653393e-06, 2.1274329355946975e-06, 3.6927380619999894e-07, 7.406442250612599e-07, 3.638090674940031e-06, 4.330357478465885e-05, 7.795177339176007e-07, 1.3920176797910244e-06, 8.81218056747457e-06, 0.00046029791701585054, 0.00042921819840557873, 1.2986030924366787e-05, 8.156819717441977e-07, 3.7786145412610495e-07, 2.5329018171760254e-07, 8.25205688670394e-07, 3.329347464386956e-07, 2.1488462209617865e-07, 6.069709570510895e-07, 6.5933245423366316e-06, 1.8965573644891265e-06, 9.730596502777189e-06, 3.7819603448951966e-07, 1.4311242466646945e-06, 2.346383354279169e-07, 1.3102816410537343e-05, 1.721369699225761e-06, 2.6023083137260983e-06, 4.175684352958342e-06, 4.686275133281015e-05, 4.337838618084788e-05, 2.2408710265153786e-06, 5.388342833612114e-05, 1.3153699001122732e-05, 7.655129365957691e-07, 7.038515263957379e-07, 1.5745789596621762e-06, 6.284454138949513e-05, 1.671282370807603e-05, 1.0951691820082488e-06, 1.53992709783779e-06, 0.0002644672931637615, 0.00028784212190657854, 9.177053470921237e-06, 0.0003488146758172661, 1.1967514183197636e-05, 0.0002927545574493706, 3.5579378163674846e-06, 3.402112724870676e-06, 0.0030407870654016733, 0.00011726794764399529, 3.2375503451476106e-06, 5.515560701496725e-07, 5.499502094608033e-06, 5.977693717795773e-07, 2.0313509594416246e-06, 2.0055063941981643e-05, 0.0022851305548101664, 1.1208395335415844e-05, 5.38078420504462e-05, 0.0023641034495085478, 1.2764669918396976e-05, 0.0004382166953291744, 9.169407348963432e-06, 3.567941348592285e-06, 0.0013107230188325047, 0.00010222577111562714, 2.679103317859699e-06, 6.164438673295081e-06, 7.899941920186393e-06, 0.002676574978977442, 0.0006336389924399555, 2.21372943087772e-06, 2.7085221177003405e-07, 1.5905476175248623e-05, 1.523104174339096e-06, 5.173117642698344e-06, 2.3625208996236324e-05, 0.00565562816336751, 0.0007562432438135147, 0.5085356831550598, 5.9586720453808084e-05, 9.038262214744464e-05, 0.0005049763130955398, 0.0053572156466543674, 0.3955647349357605, 0.06757283210754395, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["To", "further", "highlight", "the", "difference", "between", "a", "problem", "and", "an", "instance", ",", "consider", "the", "following", "instance", "of", "the", "decision", "version", "of", "the", "traveling", "salesman", "problem", ":", "Is", "there", "a", "route", "of", "at", "most", "2000", "kilometres", "passing", "through", "all", "of", "Germany", "'s", "15", "largest", "cities", "?", "The", "quantitative", "answer", "to", "this", "particular", "problem", "instance", "is", "of", "little", "use", "for", "solving", "other", "instances", "of", "the", "problem", ",", "such", "as", "asking", "for", "a", "round", "trip", "through", "all", "sites", "in", "Milan", "whose", "total", "length", "is", "at", "most", "10", "km", ".", "For", "this", "reason", ",", "complexity", "theory", "addresses", "computational", "problems", "and", "not", "particular", "problem", "instances", "."], "best_span": [93, 94], "best_span_char": [520, 542]}, "_id": "56e17e6ee3433e1400422f81", "context": "To further highlight the difference between a problem and an instance, consider the following instance of the decision version of the traveling salesman problem: Is there a route of at most 2000 kilometres passing through all of Germany's 15 largest cities? The quantitative answer to this particular problem instance is of little use for solving other instances of the problem, such as asking for a round trip through all sites in Milan whose total length is at most 10 km. For this reason, complexity theory addresses computational problems and not particular problem instances.", "title": "Computational_complexity_theory", "machine_answer": {"answer_start": 520, "text": "computational problems"}}