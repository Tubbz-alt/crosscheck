{"answers": [{"answer_start": 26, "text": "deterministic sorting algorithm quicksort"}, {"answer_start": 58, "text": "quicksort"}, {"answer_start": 22, "text": "the deterministic sorting algorithm quicksort"}], "question": "What provides a solution to a list of integers provided as input that ned to be sorted?", "id": "56e1ba41cd28a01900c67ae0", "prediction_results": {"best_span_str": "The worst-case", "span_start_probs": [4.9393616791348904e-05, 2.2729285774403252e-05, 3.408642078284174e-05, 0.0025242953561246395, 0.0221250019967556, 0.1185363233089447, 0.0029663469176739454, 0.054470546543598175, 0.005439050495624542, 2.9180082492530346e-05, 9.124052303377539e-05, 5.176850754651241e-05, 6.762325210729614e-05, 0.00011741979687940329, 1.754082290972292e-06, 0.00018176970479544252, 4.6796696551609784e-05, 2.987577136082109e-05, 2.0751514284711448e-07, 2.2982610971666873e-05, 4.57792930319556e-06, 3.385683157830499e-06, 1.7998701878241263e-05, 1.70566145243356e-05, 0.0008429983863607049, 0.0014663574984297156, 0.00012153058196417987, 0.2530736029148102, 0.1765068769454956, 6.86317216604948e-05, 9.025393956108019e-05, 1.9609460650826804e-05, 0.00044887722469866276, 0.004649610724300146, 0.007229415699839592, 1.5785702998982742e-05, 0.0011172824306413531, 2.2942491341382265e-05, 0.006071716547012329, 0.09904972463846207, 0.12657298147678375, 0.00018719679792411625, 2.847478390322067e-05, 6.90707383910194e-05, 0.05133558064699173, 0.044795773923397064, 0.00016425509238615632, 0.0006712820613756776, 0.009763859212398529, 1.0343505891796667e-05, 1.5652733054594137e-05, 0.00010392232798039913, 5.217403668211773e-05, 1.4935629224055447e-05, 0.00045574907562695444, 3.651425868156366e-05, 2.0383593437145464e-05, 3.9165788621176034e-05, 0.0012899049324914813, 0.00012009449710603803, 0.00036941139842383564, 1.6020893554014037e-06, 4.651855488191359e-05, 7.114702020771801e-05, 4.402257673064014e-06, 3.859479875245597e-06, 4.785558121511713e-05, 9.505459274805617e-06, 1.2391491281960043e-06, 0.00011399726645322517, 6.999170000199229e-05, 1.5766354408697225e-05, 3.637355121099972e-06, 1.5287358792193118e-06, 0.00011992672079941258, 1.943314828167786e-06, 0.001274743932299316, 3.093704071943648e-05, 6.708827186230337e-06, 2.4172803136934817e-07, 1.9944905034208205e-06, 7.743733294773847e-05, 2.4883611331460997e-05, 4.083430667378707e-06, 9.449898243474308e-06, 0.00011987469042651355, 0.0012371779885143042, 0.0026403600350022316, 9.524301276542246e-05, 5.435445928014815e-06, 2.2747447019355604e-06, 2.557328571128892e-07, 1.073880184776499e-06, 5.183304452316406e-08, 1.8821569938154425e-06, 1.1167870979988948e-05, 0.000158942406415008, 6.166748789837584e-06, 1.072322561412875e-06, 8.410653862256368e-08, 5.900621545151807e-06, 6.251281320146518e-06, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [6.592833233298734e-05, 9.15594064281322e-05, 7.933737833809573e-06, 1.8570304973763996e-06, 6.254426352825249e-06, 0.0018678653286769986, 0.0012628270778805017, 0.02011794038116932, 0.15212883055210114, 0.0057173059321939945, 1.0856188964680769e-05, 6.932974883966381e-06, 7.865996849432122e-07, 5.292935384204611e-05, 4.0154662883651326e-07, 0.00012353395868558437, 8.226036243286217e-07, 1.3842822227161378e-05, 9.640575626690406e-08, 7.766907947370782e-05, 7.479691248590825e-07, 3.8282794889710203e-07, 2.400761559329112e-06, 5.222860863796086e-07, 7.860567166062538e-07, 0.0027192444540560246, 0.00029471132438629866, 8.173495734808967e-05, 0.01810300350189209, 0.00013843574561178684, 0.32891520857810974, 0.008792691864073277, 5.457510269479826e-05, 2.9434431780828163e-05, 0.0004532826424110681, 9.794877769309096e-06, 0.001630651531741023, 9.15181590244174e-06, 0.0006480703013949096, 2.7544945623958483e-05, 0.005603430327028036, 0.32617440819740295, 0.0039060821291059256, 1.1296004231553525e-05, 6.146664418338332e-06, 0.036080773919820786, 8.807491394691169e-05, 0.0001276647235499695, 0.03896423429250717, 0.034130241721868515, 1.686451469140593e-05, 1.1255083336436655e-06, 0.006003187038004398, 0.0017231113743036985, 7.55308201405569e-06, 8.356039984391828e-07, 2.853975502148387e-06, 2.861678751742147e-07, 2.878288569263532e-06, 3.0160063033690676e-06, 0.00010512926382943988, 5.081721496935643e-07, 7.654110163457517e-07, 8.06921161711216e-06, 0.00046933972043916583, 6.865701038805128e-07, 1.8669051087272237e-06, 3.2485015253769234e-05, 4.019602783955634e-06, 8.997774898489297e-07, 1.5681088143537636e-06, 8.894190614228137e-06, 2.030191353696864e-06, 4.1649531112852856e-07, 4.589587479131296e-05, 7.738021849945653e-07, 9.193713776767254e-05, 5.905324087507324e-06, 0.0003930795646738261, 0.0007930443971417844, 0.00026779406471177936, 4.2912904518743744e-07, 8.025493229979475e-07, 2.3088965463102795e-05, 6.165798367874231e-06, 1.7795896383177023e-06, 2.3089262413122924e-06, 0.000443566357716918, 0.00028836188721470535, 2.335967337785405e-06, 3.558932075975463e-05, 4.168430223217001e-07, 0.0003509000816848129, 5.9094650168844964e-06, 1.3033608183832257e-06, 1.2755031093547586e-06, 2.7635167498374358e-05, 2.431327629892621e-06, 2.399235927441623e-05, 4.728915428131586e-06, 0.00011056924267904833, 0.00010866791126318276, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["For", "example", ",", "consider", "the", "deterministic", "sorting", "algorithm", "quicksort", ".", "This", "solves", "the", "problem", "of", "sorting", "a", "list", "of", "integers", "that", "is", "given", "as", "the", "input", ".", "The", "worst", "-", "case", "is", "when", "the", "input", "is", "sorted", "or", "sorted", "in", "reverse", "order", ",", "and", "the", "algorithm", "takes", "time", "O(n2", ")", "for", "this", "case", ".", "If", "we", "assume", "that", "all", "possible", "permutations", "of", "the", "input", "list", "are", "equally", "likely", ",", "the", "average", "time", "taken", "for", "sorting", "is", "O(n", "log", "n", ")", ".", "The", "best", "case", "occurs", "when", "each", "pivoting", "divides", "the", "list", "in", "half", ",", "also", "needing", "O(n", "log", "n", ")", "time", "."], "best_span": [27, 30], "best_span_char": [151, 165]}, "_id": "56e1ba41cd28a01900c67ae0", "context": "For example, consider the deterministic sorting algorithm quicksort. This solves the problem of sorting a list of integers that is given as the input. The worst-case is when the input is sorted or sorted in reverse order, and the algorithm takes time O(n2) for this case. If we assume that all possible permutations of the input list are equally likely, the average time taken for sorting is O(n log n). The best case occurs when each pivoting divides the list in half, also needing O(n log n) time.", "title": "Computational_complexity_theory", "machine_answer": {"answer_start": 151, "text": "The worst-case"}}