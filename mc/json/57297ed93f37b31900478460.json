{"answers": [{"answer_start": 140, "text": "np\u2261n (mod p)"}, {"answer_start": 140, "text": "np\u2261n (mod p) for any n if p is a prime number"}, {"answer_start": 140, "text": "np\u2261n (mod p) for any n if p is a prime number"}, {"answer_start": 140, "text": "np\u2261n (mod p) for any n if p is a prime number"}, {"answer_start": 100, "text": "the fact (Fermat's little theorem) that np\u2261n (mod p) for any n if p is a prime number"}], "question": "What does the Fermat primality test depend upon?", "id": "57297ed93f37b31900478460", "prediction_results": {"best_span_str": "Fermat's little theorem) that np\u2261n (mod p) for any n if p is a prime number", "span_start_probs": [3.252552778576501e-05, 5.1668907872226555e-06, 1.6680391127010807e-05, 8.966932000475936e-06, 3.627576461440185e-06, 8.303847425850108e-05, 0.00013555922487284988, 9.67070536717074e-06, 2.9417113182717003e-05, 0.00037031903048045933, 0.0007635289803147316, 4.738193820230663e-05, 5.7861165259964764e-05, 0.0001265999599127099, 0.0007736380794085562, 0.0194005835801363, 0.0310318972915411, 0.12166088074445724, 0.04588733986020088, 0.02751971036195755, 0.36568254232406616, 0.002141933422535658, 0.03601016476750374, 0.002427283674478531, 3.153498619212769e-05, 0.016979457810521126, 0.20182786881923676, 0.0013918475015088916, 0.003928944002836943, 0.00010777278657769784, 3.2640000426908955e-05, 0.007388090714812279, 0.010597330518066883, 0.0007533435709774494, 0.000813809281680733, 0.0005398474168032408, 6.219910574145615e-05, 0.0006182361394166946, 0.0008763006771914661, 0.00011072107736254111, 4.768853250425309e-05, 0.004511951468884945, 0.0005108204786665738, 3.087942241108976e-05, 0.00011508976604091004, 9.109664824791253e-05, 0.00012179410987300798, 9.05338310985826e-06, 0.0001129163647419773, 2.1922949599684216e-05, 3.6739161259902176e-06, 2.021932232310064e-05, 3.6832607293035835e-05, 7.96918393461965e-05, 1.283338224311592e-05, 0.006358634680509567, 0.010346008464694023, 0.0020572859793901443, 0.00030866070301271975, 0.00047988336882553995, 5.211670941207558e-05, 0.00031465006759390235, 6.422700153052574e-06, 3.2025648124545114e-06, 0.0012457332341000438, 0.002512734616175294, 0.001553013571538031, 0.00043374692904762924, 1.1809593161160592e-05, 0.0018290037987753749, 6.985334766795859e-05, 0.00024186541850212961, 8.427244210906792e-06, 7.846736480132677e-06, 0.00012411351781338453, 3.942238254239783e-05, 6.4385835685243364e-06, 1.6646272342768498e-05, 1.1737262866517995e-05, 2.62794073933037e-05, 6.976167787797749e-05, 0.0005929138278588653, 2.4984465198940597e-05, 5.325318852555938e-05, 0.0002511579659767449, 8.592448466515634e-06, 1.3426680425254744e-06, 6.260017016757047e-06, 1.5296762285288423e-05, 3.1114120702113723e-06, 8.88869067239284e-07, 0.00017078107339330018, 9.123401832766831e-05, 2.1706907773477724e-06, 3.0530829917552182e-06, 9.91362981039856e-07, 6.212888820300577e-06, 2.771107574517373e-06, 2.2092870494816452e-05, 2.1107750853843754e-06, 1.0408162779640406e-05, 2.0488166683207965e-06, 2.754004071903182e-06, 0.000176203902810812, 9.296462667407468e-05, 3.168305556755513e-05, 2.0851304725511e-05, 8.167720807250589e-05, 3.8217808651097585e-06, 6.755610115760646e-07, 6.61794183542952e-05, 7.667782483622432e-06, 2.0068746380275115e-05, 1.6332176073774463e-06, 6.498774496321857e-08, 1.0505844329600222e-05, 2.9229149731690995e-06, 1.7209777070092969e-06, 5.344795135897584e-05, 1.5291147064999677e-05, 8.991032132144028e-07, 1.7124553778558038e-05, 5.6516423683206085e-06, 1.8615969565871637e-07, 1.362304828944616e-05, 5.846827662026044e-07, 9.379911602991342e-08, 1.2736759344988968e-06, 9.228384101334086e-07, 1.840030017774552e-05, 1.4178473975334782e-05, 1.3024790860072244e-05, 6.441375444410369e-05, 4.537996119324816e-06, 1.5358376913354732e-05, 1.3354732573134243e-06, 1.9866422007908113e-05, 1.006943989523279e-06, 4.630961484508589e-06, 0.00034008760121650994, 5.942805728409439e-05, 1.3001980732951779e-05, 5.958406177342113e-07, 1.673194856266491e-05, 2.9498472940758802e-05, 2.0747395410580793e-06, 2.527529659346328e-06, 1.2775981304002926e-06, 5.101058377476875e-06, 4.47270986114745e-06, 2.0318348106229678e-05, 2.65034814219689e-05, 1.4961034366933745e-07, 2.7936516744375695e-06, 2.142423625173251e-07, 1.002898261504015e-05, 1.1020093637625905e-07, 1.977827878363314e-06, 2.669098080332333e-07, 1.1474618304418982e-06, 4.884774534730241e-05, 7.616209813932073e-07, 1.7068368833861314e-05, 2.2816055206931196e-05, 0.00010308869241271168, 0.002182864584028721, 0.017099158838391304, 0.0010048848344013095, 0.0054071382619440556, 6.445117469411343e-05, 4.882687790086493e-05, 4.756589260068722e-05, 2.1229210688034073e-05, 0.00014013564214110374, 0.00010585400013951585, 0.0008574051898904145, 0.01184666994959116, 0.0014777163742110133, 0.010160790756344795, 0.01248172391206026, 8.798902126727626e-05, 2.764710552582983e-05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "span_end_probs": [9.896915798890404e-06, 1.0174154567721416e-06, 1.3466637028614059e-05, 3.3214314498763997e-06, 3.6017351590089675e-07, 5.253083372736e-07, 1.7177068230012082e-06, 2.5354187528137118e-05, 3.84755958293681e-06, 2.002268729484058e-06, 4.106308551854454e-06, 3.0736241569684353e-06, 8.697123848833144e-05, 7.692657163715921e-06, 1.0750242154244916e-06, 1.5409668776555918e-05, 1.2500987395469565e-05, 0.00012860490824095905, 0.022834550589323044, 2.9495637136278674e-05, 2.7583246264839545e-05, 4.0154674934456125e-05, 2.5126330001512542e-05, 0.1524403989315033, 0.06111961975693703, 0.0005102548166178167, 0.06592874974012375, 2.6617597541189753e-05, 1.6275513189611956e-05, 0.0003172311116941273, 0.10737010091543198, 0.0002228105440735817, 0.00010870036203414202, 0.0002637141151353717, 0.00012009894999209791, 0.05304470285773277, 0.0003419431741349399, 8.283639181172475e-05, 0.0003927339566871524, 0.4037940204143524, 0.08195718377828598, 0.0003115492290817201, 8.3937502495246e-06, 4.454343070392497e-06, 5.212971245782683e-06, 1.8417471437714994e-05, 0.005256574135273695, 1.7550057236803696e-05, 2.811515332723502e-05, 0.00012573269486892968, 7.762660970911384e-06, 0.0002470795880071819, 2.116139694408048e-05, 0.001171265379525721, 0.00012797483941540122, 2.6967452413373394e-06, 2.1810167254443513e-06, 0.00015344959683716297, 6.281996320467442e-06, 0.0029106982983648777, 2.25483790927683e-06, 3.550939254637342e-06, 3.536908479873091e-05, 0.001847975654527545, 1.8610427332532709e-06, 3.4218746804981492e-06, 6.335606303764507e-05, 0.0007165444549173117, 3.52139772985538e-06, 0.0006032194942235947, 1.1726468073902652e-05, 2.2539685232914053e-05, 0.01352786272764206, 0.0008627643692307174, 4.560986042179138e-07, 2.202742689405568e-05, 1.2435468477178802e-07, 6.64883614831524e-08, 2.1182627278903965e-06, 2.6804855224327184e-07, 2.4154630295925017e-07, 1.5272385098796804e-06, 2.398467700004403e-07, 4.647001787816407e-07, 1.0606219120745664e-06, 7.717917469562963e-05, 2.708590045585879e-07, 4.2649142528716766e-07, 1.9601361600507516e-06, 8.868264558259398e-06, 9.981799848901574e-06, 2.781621049052774e-07, 2.544408516769181e-06, 2.530089773244981e-07, 1.2191824225737946e-06, 3.898941940860823e-05, 3.2498480777576333e-06, 1.5002700592958718e-07, 1.4282566951351328e-07, 6.562087406791761e-08, 2.6399655439490743e-07, 0.00011841607192764059, 1.016919304674957e-05, 4.2071258121723076e-07, 1.265580067411065e-07, 7.024898422969272e-07, 1.32164473143348e-07, 1.9231295027566375e-06, 7.063425186970562e-07, 1.1012016187805784e-07, 6.772288998035947e-06, 2.2786134934449365e-07, 4.898938641417772e-07, 2.430883796478156e-05, 1.1942024968902842e-07, 2.403588723609573e-06, 4.012990393675864e-05, 2.0087745724595152e-05, 3.487661842882517e-06, 5.845262194270617e-07, 6.697808174749298e-08, 1.620736725271854e-06, 9.872247574094217e-06, 6.4216649775517e-08, 2.3587799091728812e-07, 2.6845684260479175e-05, 3.2005286811909173e-06, 5.943163614574587e-07, 1.8402460000288556e-07, 6.403789853948183e-08, 3.147259874936026e-08, 4.7580462592122785e-07, 4.303804956862223e-08, 4.7618293308460125e-08, 4.176245056441985e-07, 4.849384893645947e-08, 2.565442116519989e-07, 5.273100396152586e-05, 2.170119114452973e-05, 3.297716943961859e-07, 3.959630987537821e-07, 3.0406545192818157e-05, 1.767787125572795e-07, 1.3995101255659392e-07, 5.428275926533388e-07, 5.124524591337831e-07, 3.3410316973458976e-05, 3.1135052722675027e-06, 1.5066591174672794e-07, 1.424938318450586e-07, 9.603596140550508e-08, 3.220299333861476e-07, 4.571055356450415e-08, 3.3913529478013515e-06, 3.3149109412988764e-07, 1.7802491925067443e-07, 3.679533833178539e-08, 2.5282834030804224e-05, 1.1316022892060573e-06, 6.522979134615525e-08, 4.4499421392174554e-07, 7.137780499988367e-08, 3.693510564062308e-07, 6.114289863035083e-05, 1.0927680023087305e-06, 1.1087900020356756e-07, 8.854039333527908e-05, 1.3049032077105949e-06, 0.0010007907403632998, 6.453812602558173e-06, 6.089959788369015e-05, 1.0710959941206966e-05, 1.5573843938909704e-06, 2.844622713382705e-06, 0.0001054068561643362, 4.033100140077295e-06, 5.391071226767963e-06, 1.0885129313464859e-06, 4.936907316732686e-06, 3.361755079822615e-05, 0.016147509217262268, 0.002368787070736289, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], "passage_tokens": ["A", "particularly", "simple", "example", "of", "a", "probabilistic", "test", "is", "the", "Fermat", "primality", "test", ",", "which", "relies", "on", "the", "fact", "(", "Fermat", "'s", "little", "theorem", ")", "that", "np\u2261n", "(", "mod", "p", ")", "for", "any", "n", "if", "p", "is", "a", "prime", "number", ".", "If", "we", "have", "a", "number", "b", "that", "we", "want", "to", "test", "for", "primality", ",", "then", "we", "work", "out", "nb", "(", "mod", "b", ")", "for", "a", "random", "value", "of", "n", "as", "our", "test", ".", "A", "flaw", "with", "this", "test", "is", "that", "there", "are", "some", "composite", "numbers", "(", "the", "Carmichael", "numbers", ")", "that", "satisfy", "the", "Fermat", "identity", "even", "though", "they", "are", "not", "prime", ",", "so", "the", "test", "has", "no", "way", "of", "distinguishing", "between", "prime", "numbers", "and", "Carmichael", "numbers", ".", "Carmichael", "numbers", "are", "substantially", "rarer", "than", "prime", "numbers", ",", "though", ",", "so", "this", "test", "can", "be", "useful", "for", "practical", "purposes", ".", "More", "powerful", "extensions", "of", "the", "Fermat", "primality", "test", ",", "such", "as", "the", "Baillie", "-", "PSW", ",", "Miller", "-", "Rabin", ",", "and", "Solovay", "-", "Strassen", "tests", ",", "are", "guaranteed", "to", "fail", "at", "least", "some", "of", "the", "time", "when", "applied", "to", "a", "composite", "number", "."], "best_span": [20, 39], "best_span_char": [61, 185]}, "_id": "57297ed93f37b31900478460", "context": "A particularly simple example of a probabilistic test is the Fermat primality test, which relies on the fact (Fermat's little theorem) that np\u2261n (mod p) for any n if p is a prime number. If we have a number b that we want to test for primality, then we work out nb (mod b) for a random value of n as our test. A flaw with this test is that there are some composite numbers (the Carmichael numbers) that satisfy the Fermat identity even though they are not prime, so the test has no way of distinguishing between prime numbers and Carmichael numbers. Carmichael numbers are substantially rarer than prime numbers, though, so this test can be useful for practical purposes. More powerful extensions of the Fermat primality test, such as the Baillie-PSW, Miller-Rabin, and Solovay-Strassen tests, are guaranteed to fail at least some of the time when applied to a composite number.", "title": "Prime_number", "machine_answer": {"answer_start": 61, "text": "Fermat's little theorem) that np\u2261n (mod p) for any n if p is a prime number"}}